---
name: 'Build storybook and pack npm package'

on:
  workflow_run:
    workflows:
      - 'Run checks and tests'
    types:
      - completed

jobs:
  build-storybook:
    name: Build storybook page
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm -w @lotta-schule/theme run build
      - run: npm -w @lotta-schule/storybook-addon-theme run build
      - run: npm run storybook:build
        env:
          STORYBOOK_BASE_HREF: /${{ github.event.repository.name }}
      - run: tar -czf storybook.tgz --directory=storybook-static .
      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: Storybook Static Site Documentation
          path: storybook.tgz

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm pack
      - name: Upload package artifact
        uses: actions/upload-artifact@v3
        with:
          name: npm package
          path: lotta-schule-hubert*.tgz
          if-no-files-found: error
  check_version_name_tag:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }} && ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      version_name: ${{ steps.read_version.outputs.version_name }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_branch }}
      - uses: actions/setup-node@v3
        with:
          node-version: '16.14'
          registry-url: https://registry.npmjs.org
      - name: Read version from package.json
        run: |
          export VERSION_NAME=$(node -p 'require("./package.json").version')
          echo "version detected in package.json: $VERSION_NAME"
          echo "::set-output name=version_name::$VERSION_NAME"
        id: read_version
      - name: Check that tag does not exist
        run: |
          [ -z $(git tag -l "${{ steps.read_version.outputs.version_name }}") ]

  publish_artifact:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }} && ${{ github.event.workflow_run.conclusion == 'success' }}
    needs:
      - check_version_name_tag
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16.14'
          registry-url: https://registry.npmjs.org

      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "npm package"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/npm_package.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip npm_package.zip

      - name: publish to npm
        run: |
          npm publish lotta-schule-hubert*.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create and push tag
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ needs.check_version_name_tag.outputs.version_name }}",
              sha: context.sha
            })

  deploy-storybook:
    runs-on: ubuntu-latest
    needs:
      - check_version_name_tag
    steps:
      - name: Download Storybook archive artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "Storybook Static Site Documentation"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/storybook.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip storybook.zip

      - name: Untar storybook packages
        run: |
          mkdir -p storybook
          tar -xzf storybook.tgz -C storybook

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: storybook
