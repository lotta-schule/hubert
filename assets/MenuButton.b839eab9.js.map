{"version":3,"file":"MenuButton.b839eab9.js","sources":["../../node_modules/@react-stately/selection/dist/module.js","../../node_modules/@react-stately/collections/dist/module.js","../../node_modules/@react-stately/menu/dist/module.js","../../node_modules/@react-aria/selection/dist/module.js","../../node_modules/@react-aria/menu/dist/module.js","../../src/popover/new/Popover.tsx","../../node_modules/@react-stately/tree/dist/module.js","../../src/menu/MenuItem.tsx","../../src/menu/Menu.tsx","../../src/menu/MenuButton.tsx"],"sourcesContent":["import {useRef as $Qsto2$useRef, useState as $Qsto2$useState, useMemo as $Qsto2$useMemo, useEffect as $Qsto2$useEffect} from \"react\";\nimport {useControlledState as $Qsto2$useControlledState} from \"@react-stately/utils\";\n\n\nclass $e40ea825a81a3709$export$52baac22726c72bf extends Set {\n    constructor(keys, anchorKey, currentKey){\n        super(keys);\n        if (keys instanceof $e40ea825a81a3709$export$52baac22726c72bf) {\n            this.anchorKey = anchorKey || keys.anchorKey;\n            this.currentKey = currentKey || keys.currentKey;\n        } else {\n            this.anchorKey = anchorKey;\n            this.currentKey = currentKey;\n        }\n    }\n}\n\n\n\nfunction $7af3f5b51489e0b5$var$equalSets(setA, setB) {\n    if (setA.size !== setB.size) return false;\n    for (let item of setA){\n        if (!setB.has(item)) return false;\n    }\n    return true;\n}\nfunction $7af3f5b51489e0b5$export$253fe78d46329472(props) {\n    let { selectionMode: selectionMode = 'none' , disallowEmptySelection: disallowEmptySelection , allowDuplicateSelectionEvents: allowDuplicateSelectionEvents , selectionBehavior: selectionBehaviorProp = 'toggle' , disabledBehavior: disabledBehavior = 'all'  } = props;\n    // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n    // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n    let isFocusedRef = $Qsto2$useRef(false);\n    let [, setFocused] = $Qsto2$useState(false);\n    let focusedKeyRef = $Qsto2$useRef(null);\n    let childFocusStrategyRef = $Qsto2$useRef(null);\n    let [, setFocusedKey] = $Qsto2$useState(null);\n    let selectedKeysProp = $Qsto2$useMemo(()=>$7af3f5b51489e0b5$var$convertSelection(props.selectedKeys)\n    , [\n        props.selectedKeys\n    ]);\n    let defaultSelectedKeys = $Qsto2$useMemo(()=>$7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new $e40ea825a81a3709$export$52baac22726c72bf())\n    , [\n        props.defaultSelectedKeys\n    ]);\n    let [selectedKeys, setSelectedKeys] = $Qsto2$useControlledState(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);\n    let disabledKeysProp = $Qsto2$useMemo(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set()\n    , [\n        props.disabledKeys\n    ]);\n    let [selectionBehavior, setSelectionBehavior] = $Qsto2$useState(selectionBehaviorProp);\n    // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n    // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n    if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) setSelectionBehavior('replace');\n    // If the selectionBehavior prop changes, update the state as well.\n    let lastSelectionBehavior = $Qsto2$useRef(selectionBehaviorProp);\n    $Qsto2$useEffect(()=>{\n        if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n            setSelectionBehavior(selectionBehaviorProp);\n            lastSelectionBehavior.current = selectionBehaviorProp;\n        }\n    }, [\n        selectionBehaviorProp\n    ]);\n    return {\n        selectionMode: selectionMode,\n        disallowEmptySelection: disallowEmptySelection,\n        selectionBehavior: selectionBehavior,\n        setSelectionBehavior: setSelectionBehavior,\n        get isFocused () {\n            return isFocusedRef.current;\n        },\n        setFocused (f) {\n            isFocusedRef.current = f;\n            setFocused(f);\n        },\n        get focusedKey () {\n            return focusedKeyRef.current;\n        },\n        get childFocusStrategy () {\n            return childFocusStrategyRef.current;\n        },\n        setFocusedKey (k, childFocusStrategy = 'first') {\n            focusedKeyRef.current = k;\n            childFocusStrategyRef.current = childFocusStrategy;\n            setFocusedKey(k);\n        },\n        selectedKeys: selectedKeys,\n        setSelectedKeys (keys) {\n            if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys)) setSelectedKeys(keys);\n        },\n        disabledKeys: disabledKeysProp,\n        disabledBehavior: disabledBehavior\n    };\n}\nfunction $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {\n    if (!selection) return defaultValue;\n    return selection === 'all' ? 'all' : new $e40ea825a81a3709$export$52baac22726c72bf(selection);\n}\n\n\n\nclass $d496c0a20b6e58ec$export$6c8a5aaad13c9852 {\n    /**\n   * The type of selection that is allowed in the collection.\n   */ get selectionMode() {\n        return this.state.selectionMode;\n    }\n    /**\n   * Whether the collection allows empty selection.\n   */ get disallowEmptySelection() {\n        return this.state.disallowEmptySelection;\n    }\n    /**\n   * The selection behavior for the collection.\n   */ get selectionBehavior() {\n        return this.state.selectionBehavior;\n    }\n    /**\n   * Sets the selection behavior for the collection.\n   */ setSelectionBehavior(selectionBehavior) {\n        this.state.setSelectionBehavior(selectionBehavior);\n    }\n    /**\n   * Whether the collection is currently focused.\n   */ get isFocused() {\n        return this.state.isFocused;\n    }\n    /**\n   * Sets whether the collection is focused.\n   */ setFocused(isFocused) {\n        this.state.setFocused(isFocused);\n    }\n    /**\n   * The current focused key in the collection.\n   */ get focusedKey() {\n        return this.state.focusedKey;\n    }\n    /** Whether the first or last child of the focused key should receive focus. */ get childFocusStrategy() {\n        return this.state.childFocusStrategy;\n    }\n    /**\n   * Sets the focused key.\n   */ setFocusedKey(key, childFocusStrategy) {\n        this.state.setFocusedKey(key, childFocusStrategy);\n    }\n    /**\n   * The currently selected keys in the collection.\n   */ get selectedKeys() {\n        return this.state.selectedKeys === 'all' ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;\n    }\n    /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */ get rawSelection() {\n        return this.state.selectedKeys;\n    }\n    /**\n   * Returns whether a key is selected.\n   */ isSelected(key) {\n        if (this.state.selectionMode === 'none') return false;\n        key = this.getKey(key);\n        return this.state.selectedKeys === 'all' ? this.canSelectItem(key) : this.state.selectedKeys.has(key);\n    }\n    /**\n   * Whether the selection is empty.\n   */ get isEmpty() {\n        return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n    }\n    /**\n   * Whether all items in the collection are selected.\n   */ get isSelectAll() {\n        if (this.isEmpty) return false;\n        if (this.state.selectedKeys === 'all') return true;\n        if (this._isSelectAll != null) return this._isSelectAll;\n        let allKeys = this.getSelectAllKeys();\n        let selectedKeys = this.state.selectedKeys;\n        this._isSelectAll = allKeys.every((k)=>selectedKeys.has(k)\n        );\n        return this._isSelectAll;\n    }\n    get firstSelectedKey() {\n        let first = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!first || (item === null || item === void 0 ? void 0 : item.index) < first.index) first = item;\n        }\n        return first === null || first === void 0 ? void 0 : first.key;\n    }\n    get lastSelectedKey() {\n        let last = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!last || (item === null || item === void 0 ? void 0 : item.index) > last.index) last = item;\n        }\n        return last === null || last === void 0 ? void 0 : last.key;\n    }\n    get disabledKeys() {\n        return this.state.disabledKeys;\n    }\n    get disabledBehavior() {\n        return this.state.disabledBehavior;\n    }\n    /**\n   * Extends the selection to the given key.\n   */ extendSelection(toKey) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single') {\n            this.replaceSelection(toKey);\n            return;\n        }\n        toKey = this.getKey(toKey);\n        let selection;\n        // Only select the one key if coming from a select all.\n        if (this.state.selectedKeys === 'all') selection = new $e40ea825a81a3709$export$52baac22726c72bf([\n            toKey\n        ], toKey, toKey);\n        else {\n            let selectedKeys = this.state.selectedKeys;\n            let anchorKey = selectedKeys.anchorKey || toKey;\n            selection = new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys, anchorKey, toKey);\n            for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))selection.delete(key);\n            for (let key1 of this.getKeyRange(toKey, anchorKey))if (this.canSelectItem(key1)) selection.add(key1);\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getKeyRange(from, to) {\n        let fromItem = this.collection.getItem(from);\n        let toItem = this.collection.getItem(to);\n        if (fromItem && toItem) {\n            if (fromItem.index <= toItem.index) return this.getKeyRangeInternal(from, to);\n            return this.getKeyRangeInternal(to, from);\n        }\n        return [];\n    }\n    getKeyRangeInternal(from, to) {\n        let keys = [];\n        let key = from;\n        while(key){\n            let item = this.collection.getItem(key);\n            if (item && item.type === 'item' || item.type === 'cell' && this.allowsCellSelection) keys.push(key);\n            if (key === to) return keys;\n            key = this.collection.getKeyAfter(key);\n        }\n        return [];\n    }\n    getKey(key) {\n        let item = this.collection.getItem(key);\n        if (!item) // ¯\\_(ツ)_/¯\n        return key;\n        // If cell selection is allowed, just return the key.\n        if (item.type === 'cell' && this.allowsCellSelection) return key;\n        // Find a parent item to select\n        while(item.type !== 'item' && item.parentKey != null)item = this.collection.getItem(item.parentKey);\n        if (!item || item.type !== 'item') return null;\n        return item.key;\n    }\n    /**\n   * Toggles whether the given key is selected.\n   */ toggleSelection(key) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single' && !this.isSelected(key)) {\n            this.replaceSelection(key);\n            return;\n        }\n        key = this.getKey(key);\n        if (key == null) return;\n        let keys = new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n        if (keys.has(key)) keys.delete(key);\n        else if (this.canSelectItem(key)) {\n            keys.add(key);\n            keys.anchorKey = key;\n            keys.currentKey = key;\n        }\n        if (this.disallowEmptySelection && keys.size === 0) return;\n        this.state.setSelectedKeys(keys);\n    }\n    /**\n   * Replaces the selection with only the given key.\n   */ replaceSelection(key) {\n        if (this.selectionMode === 'none') return;\n        key = this.getKey(key);\n        if (key == null) return;\n        let selection = this.canSelectItem(key) ? new $e40ea825a81a3709$export$52baac22726c72bf([\n            key\n        ], key, key) : new $e40ea825a81a3709$export$52baac22726c72bf();\n        this.state.setSelectedKeys(selection);\n    }\n    /**\n   * Replaces the selection with the given keys.\n   */ setSelectedKeys(keys) {\n        if (this.selectionMode === 'none') return;\n        let selection = new $e40ea825a81a3709$export$52baac22726c72bf();\n        for (let key of keys){\n            key = this.getKey(key);\n            if (key != null) {\n                selection.add(key);\n                if (this.selectionMode === 'single') break;\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getSelectAllKeys() {\n        let keys = [];\n        let addKeys = (key)=>{\n            while(key){\n                if (this.canSelectItem(key)) {\n                    let item = this.collection.getItem(key);\n                    if (item.type === 'item') keys.push(key);\n                    // Add child keys. If cell selection is allowed, then include item children too.\n                    if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) addKeys([\n                        ...item.childNodes\n                    ][0].key);\n                }\n                key = this.collection.getKeyAfter(key);\n            }\n        };\n        addKeys(this.collection.getFirstKey());\n        return keys;\n    }\n    /**\n   * Selects all items in the collection.\n   */ selectAll() {\n        if (this.selectionMode === 'multiple') this.state.setSelectedKeys('all');\n    }\n    /**\n   * Removes all keys from the selection.\n   */ clearSelection() {\n        if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());\n    }\n    /**\n   * Toggles between select all and an empty selection.\n   */ toggleSelectAll() {\n        if (this.isSelectAll) this.clearSelection();\n        else this.selectAll();\n    }\n    select(key, e) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single') {\n            if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);\n            else this.replaceSelection(key);\n        } else if (this.selectionBehavior === 'toggle' || e && (e.pointerType === 'touch' || e.pointerType === 'virtual')) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        this.toggleSelection(key);\n        else this.replaceSelection(key);\n    }\n    /**\n   * Returns whether the current selection is equal to the given selection.\n   */ isSelectionEqual(selection) {\n        if (selection === this.state.selectedKeys) return true;\n        // Check if the set of keys match.\n        let selectedKeys = this.selectedKeys;\n        if (selection.size !== selectedKeys.size) return false;\n        for (let key of selection){\n            if (!selectedKeys.has(key)) return false;\n        }\n        for (let key2 of selectedKeys){\n            if (!selection.has(key2)) return false;\n        }\n        return true;\n    }\n    canSelectItem(key) {\n        if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) return false;\n        let item = this.collection.getItem(key);\n        if (!item || item.type === 'cell' && !this.allowsCellSelection) return false;\n        return true;\n    }\n    isDisabled(key) {\n        return this.state.disabledKeys.has(key) && this.state.disabledBehavior === 'all';\n    }\n    constructor(collection, state, options){\n        this.collection = collection;\n        this.state = state;\n        var ref;\n        this.allowsCellSelection = (ref = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && ref !== void 0 ? ref : false;\n        this._isSelectAll = null;\n    }\n}\n\n\n\n\nexport {$7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState, $d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager};\n//# sourceMappingURL=module.js.map\n","import $tyW6A$react, {useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef} from \"react\";\n\n\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n    return null;\n}\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n    let { childItems: childItems , title: title , children: children  } = props;\n    let rendered = props.title || props.children;\n    let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n    // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n    if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n    yield {\n        type: 'item',\n        props: props,\n        rendered: rendered,\n        textValue: textValue,\n        'aria-label': props['aria-label'],\n        hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n        *childNodes () {\n            if (childItems) for (let child1 of childItems)yield {\n                type: 'item',\n                value: child1\n            };\n            else if (title) {\n                let items = [];\n                $tyW6A$react.Children.forEach(children, (child)=>{\n                    items.push({\n                        type: 'item',\n                        element: child\n                    });\n                });\n                yield* items;\n            }\n        }\n    };\n};\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n    if (props.hasChildItems != null) return props.hasChildItems;\n    if (props.childItems) return true;\n    if (props.title && $tyW6A$react.Children.count(props.children) > 0) return true;\n    return false;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\n\n\n\nfunction $9fc4852771d079eb$var$Section(props) {\n    return null;\n}\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n    let { children: children , title: title , items: items1  } = props;\n    yield {\n        type: 'section',\n        hasChildNodes: true,\n        rendered: title,\n        'aria-label': props['aria-label'],\n        *childNodes () {\n            if (typeof children === 'function') {\n                if (!items1) throw new Error('props.children was a function but props.items is missing');\n                for (let item of items1)yield {\n                    type: 'item',\n                    value: item,\n                    renderer: children\n                };\n            } else {\n                let items = [];\n                $tyW6A$react.Children.forEach(children, (child)=>{\n                    items.push({\n                        type: 'item',\n                        element: child\n                    });\n                });\n                yield* items;\n            }\n        }\n    };\n};\n// We don't want getCollectionNode to show up in the type definition\nlet $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\n\n\n\nclass $eb2240fc39a57fa5$export$bf788dd355e3a401 {\n    build(props, context) {\n        this.context = context;\n        return $eb2240fc39a57fa5$var$iterable(()=>this.iterateCollection(props)\n        );\n    }\n    *iterateCollection(props) {\n        let { children: children , items: items  } = props;\n        if (typeof children === 'function') {\n            if (!items) throw new Error('props.children was a function but props.items is missing');\n            for (let item of props.items)yield* this.getFullNode({\n                value: item\n            }, {\n                renderer: children\n            });\n        } else {\n            let items = [];\n            $tyW6A$react.Children.forEach(children, (child)=>{\n                items.push(child);\n            });\n            let index = 0;\n            for (let item of items){\n                let nodes = this.getFullNode({\n                    element: item,\n                    index: index\n                }, {\n                });\n                for (let node of nodes){\n                    index++;\n                    yield node;\n                }\n            }\n        }\n    }\n    getKey(item, partialNode, state, parentKey) {\n        if (item.key != null) return item.key;\n        if (partialNode.type === 'cell' && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n        let v = partialNode.value;\n        if (v != null) {\n            var _key;\n            let key = (_key = v.key) !== null && _key !== void 0 ? _key : v.id;\n            if (key == null) throw new Error('No key found for item');\n            return key;\n        }\n        return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n    }\n    getChildState(state, partialNode) {\n        return {\n            renderer: partialNode.renderer || state.renderer\n        };\n    }\n    *getFullNode(partialNode, state, parentKey, parentNode) {\n        // If there's a value instead of an element on the node, and a parent renderer function is available,\n        // use it to render an element for the value.\n        let element = partialNode.element;\n        if (!element && partialNode.value && state && state.renderer) {\n            let cached = this.cache.get(partialNode.value);\n            if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n                cached.index = partialNode.index;\n                cached.parentKey = parentNode ? parentNode.key : null;\n                yield cached;\n                return;\n            }\n            element = state.renderer(partialNode.value);\n        }\n        // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n        // Call this function to get a partial node, and recursively build a full node from there.\n        if ($tyW6A$react.isValidElement(element)) {\n            let type = element.type;\n            if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n                let name = typeof element.type === 'function' ? element.type.name : element.type;\n                throw new Error(`Unknown element <${name}> in collection.`);\n            }\n            let childNodes = type.getCollectionNode(element.props, this.context);\n            let index = partialNode.index;\n            let result = childNodes.next();\n            while(!result.done && result.value){\n                let childNode = result.value;\n                partialNode.index = index;\n                let nodeKey = childNode.key;\n                if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n                let nodes = this.getFullNode({\n                    ...childNode,\n                    key: nodeKey,\n                    index: index,\n                    wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n                }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n                let children = [\n                    ...nodes\n                ];\n                for (let node of children){\n                    // Cache the node based on its value\n                    node.value = childNode.value || partialNode.value;\n                    if (node.value) this.cache.set(node.value, node);\n                    // The partial node may have specified a type for the child in order to specify a constraint.\n                    // Verify that the full node that was built recursively matches this type.\n                    if (partialNode.type && node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n                    index++;\n                    yield node;\n                }\n                result = childNodes.next(children);\n            }\n            return;\n        }\n        // Ignore invalid elements\n        if (partialNode.key == null) return;\n        // Create full node\n        let builder = this;\n        let node = {\n            type: partialNode.type,\n            props: partialNode.props,\n            key: partialNode.key,\n            parentKey: parentNode ? parentNode.key : null,\n            value: partialNode.value,\n            level: parentNode ? parentNode.level + 1 : 0,\n            index: partialNode.index,\n            rendered: partialNode.rendered,\n            textValue: partialNode.textValue,\n            'aria-label': partialNode['aria-label'],\n            wrapper: partialNode.wrapper,\n            shouldInvalidate: partialNode.shouldInvalidate,\n            hasChildNodes: partialNode.hasChildNodes,\n            childNodes: $eb2240fc39a57fa5$var$iterable(function*() {\n                if (!partialNode.hasChildNodes) return;\n                let index = 0;\n                for (let child of partialNode.childNodes()){\n                    // Ensure child keys are globally unique by prepending the parent node's key\n                    if (child.key != null) // TODO: Remove this line entirely and enforce that users always provide unique keys.\n                    // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n                    // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n                    // children having a key of `abc`.\n                    child.key = `${node.key}${child.key}`;\n                    child.index = index;\n                    let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n                    for (let node1 of nodes){\n                        index++;\n                        yield node1;\n                    }\n                }\n            })\n        };\n        yield node;\n    }\n    constructor(){\n        this.cache = new WeakMap();\n    }\n}\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n    let cache = [];\n    let iterable = null;\n    return {\n        *[Symbol.iterator] () {\n            for (let item of cache)yield item;\n            if (!iterable) iterable = iterator();\n            for (let item1 of iterable){\n                cache.push(item1);\n                yield item1;\n            }\n        }\n    };\n}\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n    if (outer && inner) return (element)=>outer(inner(element))\n    ;\n    if (outer) return outer;\n    if (inner) return inner;\n}\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n    return str[0].toUpperCase() + str.slice(1);\n}\n\n\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context, invalidators = []) {\n    let builder = $tyW6A$useMemo(()=>new $eb2240fc39a57fa5$export$bf788dd355e3a401()\n    , []);\n    let prev = $tyW6A$useRef(null);\n    return $tyW6A$useMemo(()=>{\n        let nodes = builder.build(props, context);\n        prev.current = factory(nodes, prev.current);\n        return prev.current;\n    // Don't invalidate when any prop changes, just the two we care about.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        builder,\n        props.children,\n        props.items,\n        context,\n        ...invalidators\n    ]);\n}\n\n\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n    let count = $453cc9f0df89c0a5$var$cache.get(collection);\n    if (count != null) return count;\n    count = 0;\n    for (let item of collection)if (item.type === 'section') count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);\n    else count++;\n    $453cc9f0df89c0a5$var$cache.set(collection, count);\n    return count;\n}\n\n\n\n\nexport {$c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount};\n//# sourceMappingURL=module.js.map\n","import {useOverlayTriggerState as $9Xvoh$useOverlayTriggerState} from \"@react-stately/overlays\";\nimport {useState as $9Xvoh$useState} from \"react\";\n\n\n\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n    let overlayTriggerState = $9Xvoh$useOverlayTriggerState(props);\n    let [focusStrategy1, setFocusStrategy] = $9Xvoh$useState(null);\n    return {\n        focusStrategy: focusStrategy1,\n        ...overlayTriggerState,\n        open (focusStrategy = null) {\n            setFocusStrategy(focusStrategy);\n            overlayTriggerState.open();\n        },\n        toggle (focusStrategy = null) {\n            setFocusStrategy(focusStrategy);\n            overlayTriggerState.toggle();\n        }\n    };\n}\n\n\n\n\nexport {$a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState};\n//# sourceMappingURL=module.js.map\n","import {useRef as $eCAIO$useRef, useEffect as $eCAIO$useEffect, useMemo as $eCAIO$useMemo} from \"react\";\nimport {getFocusableTreeWalker as $eCAIO$getFocusableTreeWalker, focusSafely as $eCAIO$focusSafely} from \"@react-aria/focus\";\nimport {focusWithoutScrolling as $eCAIO$focusWithoutScrolling, useEvent as $eCAIO$useEvent, scrollIntoView as $eCAIO$scrollIntoView, mergeProps as $eCAIO$mergeProps, isAppleDevice as $eCAIO$isAppleDevice, isMac as $eCAIO$isMac} from \"@react-aria/utils\";\nimport {useLocale as $eCAIO$useLocale, useCollator as $eCAIO$useCollator} from \"@react-aria/i18n\";\nimport {usePress as $eCAIO$usePress, useLongPress as $eCAIO$useLongPress} from \"@react-aria/interactions\";\n\n\n\n\n\n\nfunction $feb5ffebff200149$export$d3e3bd3e26688c04(e) {\n    // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n    // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n    return $eCAIO$isAppleDevice() ? e.altKey : e.ctrlKey;\n}\nfunction $feb5ffebff200149$export$16792effe837dba3(e) {\n    if ($eCAIO$isMac()) return e.metaKey;\n    return e.ctrlKey;\n}\n\n\n\n\nfunction $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {\n    let { keyboardDelegate: keyboardDelegate , selectionManager: selectionManager , onTypeSelect: onTypeSelect  } = options;\n    let state = $eCAIO$useRef({\n        search: '',\n        timeout: null\n    }).current;\n    let onKeyDown = (e)=>{\n        let character = $fb3050f43d946246$var$getStringForKey(e.key);\n        if (!character || e.ctrlKey || e.metaKey) return;\n        // Do not propagate the Spacebar event if it's meant to be part of the search.\n        // When we time out, the search term becomes empty, hence the check on length.\n        // Trimming is to account for the case of pressing the Spacebar more than once,\n        // which should cycle through the selection/deselection of the focused item.\n        if (character === ' ' && state.search.trim().length > 0) {\n            e.preventDefault();\n            if (!('continuePropagation' in e)) e.stopPropagation();\n        }\n        state.search += character;\n        // Use the delegate to find a key to focus.\n        // Prioritize items after the currently focused item, falling back to searching the whole list.\n        let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n        // If no key found, search from the top.\n        if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n        if (key != null) {\n            selectionManager.setFocusedKey(key);\n            if (onTypeSelect) onTypeSelect(key);\n        }\n        clearTimeout(state.timeout);\n        state.timeout = setTimeout(()=>{\n            state.search = '';\n        }, 500);\n    };\n    return {\n        typeSelectProps: {\n            // Using a capturing listener to catch the keydown event before\n            // other hooks in order to handle the Spacebar event.\n            onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n        }\n    };\n}\nfunction $fb3050f43d946246$var$getStringForKey(key) {\n    // If the key is of length 1, it is an ASCII value.\n    // Otherwise, if there are no ASCII characters in the key name,\n    // it is a Unicode character.\n    // See https://www.w3.org/TR/uievents-key/\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n    return '';\n}\n\n\nfunction $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {\n    let { selectionManager: manager , keyboardDelegate: delegate , ref: ref , autoFocus: autoFocus = false , shouldFocusWrap: shouldFocusWrap = false , disallowEmptySelection: disallowEmptySelection = false , disallowSelectAll: disallowSelectAll = false , selectOnFocus: selectOnFocus = manager.selectionBehavior === 'replace' , disallowTypeAhead: disallowTypeAhead = false , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation = false , isVirtualized: isVirtualized , scrollRef: // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref  } = options;\n    let { direction: direction  } = $eCAIO$useLocale();\n    let onKeyDown = (e)=>{\n        // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n        if (e.altKey && e.key === 'Tab') e.preventDefault();\n        // Keyboard events bubble through portals. Don't handle keyboard events\n        // for elements outside the collection (e.g. menus).\n        if (!ref.current.contains(e.target)) return;\n        const navigateToKey = (key, childFocus)=>{\n            if (key != null) {\n                manager.setFocusedKey(key, childFocus);\n                if (e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(key);\n                else if (selectOnFocus && !$feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.replaceSelection(key);\n            }\n        };\n        switch(e.key){\n            case 'ArrowDown':\n                if (delegate.getKeyBelow) {\n                    var ref4, ref1;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (ref4 = delegate.getFirstKey) === null || ref4 === void 0 ? void 0 : ref4.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref1 = delegate.getFirstKey) === null || ref1 === void 0 ? void 0 : ref1.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowUp':\n                if (delegate.getKeyAbove) {\n                    var ref2, ref3;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (ref2 = delegate.getLastKey) === null || ref2 === void 0 ? void 0 : ref2.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref3 = delegate.getLastKey) === null || ref3 === void 0 ? void 0 : ref3.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowLeft':\n                if (delegate.getKeyLeftOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n                }\n                break;\n            case 'ArrowRight':\n                if (delegate.getKeyRightOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n                }\n                break;\n            case 'Home':\n                if (delegate.getFirstKey) {\n                    e.preventDefault();\n                    let firstKey = delegate.getFirstKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));\n                    manager.setFocusedKey(firstKey);\n                    if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(firstKey);\n                    else if (selectOnFocus) manager.replaceSelection(firstKey);\n                }\n                break;\n            case 'End':\n                if (delegate.getLastKey) {\n                    e.preventDefault();\n                    let lastKey = delegate.getLastKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));\n                    manager.setFocusedKey(lastKey);\n                    if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(lastKey);\n                    else if (selectOnFocus) manager.replaceSelection(lastKey);\n                }\n                break;\n            case 'PageDown':\n                if (delegate.getKeyPageBelow) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'PageUp':\n                if (delegate.getKeyPageAbove) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'a':\n                if ($feb5ffebff200149$export$16792effe837dba3(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n                    e.preventDefault();\n                    manager.selectAll();\n                }\n                break;\n            case 'Escape':\n                e.preventDefault();\n                if (!disallowEmptySelection) manager.clearSelection();\n                break;\n            case 'Tab':\n                if (!allowsTabNavigation) {\n                    // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n                    // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n                    // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n                    // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n                    // in the collection, so that the browser default behavior will apply starting from that element\n                    // rather than the currently focused one.\n                    if (e.shiftKey) ref.current.focus();\n                    else {\n                        let walker = $eCAIO$getFocusableTreeWalker(ref.current, {\n                            tabbable: true\n                        });\n                        let next;\n                        let last;\n                        do {\n                            last = walker.lastChild();\n                            if (last) next = last;\n                        }while (last)\n                        if (next && !next.contains(document.activeElement)) $eCAIO$focusWithoutScrolling(next);\n                    }\n                    break;\n                }\n        }\n    };\n    // Store the scroll position so we can restore it later.\n    let scrollPos = $eCAIO$useRef({\n        top: 0,\n        left: 0\n    });\n    $eCAIO$useEvent(scrollRef, 'scroll', isVirtualized ? null : ()=>{\n        scrollPos.current = {\n            top: scrollRef.current.scrollTop,\n            left: scrollRef.current.scrollLeft\n        };\n    });\n    let onFocus = (e)=>{\n        if (manager.isFocused) {\n            // If a focus event bubbled through a portal, reset focus state.\n            if (!e.currentTarget.contains(e.target)) manager.setFocused(false);\n            return;\n        }\n        // Focus events can bubble through portals. Ignore these events.\n        if (!e.currentTarget.contains(e.target)) return;\n        manager.setFocused(true);\n        if (manager.focusedKey == null) {\n            let navigateToFirstKey = (key)=>{\n                if (key != null) {\n                    manager.setFocusedKey(key);\n                    if (selectOnFocus) manager.replaceSelection(key);\n                }\n            };\n            // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n            // Attempt to detect whether the user is tabbing forward or backward into the collection\n            // and either focus the first or last item accordingly.\n            let relatedTarget = e.relatedTarget;\n            var _lastSelectedKey, _firstSelectedKey;\n            if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToFirstKey((_lastSelectedKey = manager.lastSelectedKey) !== null && _lastSelectedKey !== void 0 ? _lastSelectedKey : delegate.getLastKey());\n            else navigateToFirstKey((_firstSelectedKey = manager.firstSelectedKey) !== null && _firstSelectedKey !== void 0 ? _firstSelectedKey : delegate.getFirstKey());\n        } else if (!isVirtualized) {\n            // Restore the scroll position to what it was before.\n            scrollRef.current.scrollTop = scrollPos.current.top;\n            scrollRef.current.scrollLeft = scrollPos.current.left;\n            // Refocus and scroll the focused item into view if it exists within the scrollable region.\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) {\n                // This prevents a flash of focus on the first/last element in the collection\n                $eCAIO$focusWithoutScrolling(element);\n                $eCAIO$scrollIntoView(scrollRef.current, element);\n            }\n        }\n    };\n    let onBlur = (e)=>{\n        // Don't set blurred and then focused again if moving focus within the collection.\n        if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);\n    };\n    const autoFocusRef = $eCAIO$useRef(autoFocus);\n    $eCAIO$useEffect(()=>{\n        if (autoFocusRef.current) {\n            let focusedKey = null;\n            // Check focus strategy to determine which item to focus\n            if (autoFocus === 'first') focusedKey = delegate.getFirstKey();\n            if (autoFocus === 'last') focusedKey = delegate.getLastKey();\n            // If there are any selected keys, make the first one the new focus target\n            let selectedKeys = manager.selectedKeys;\n            if (selectedKeys.size) focusedKey = selectedKeys.values().next().value;\n            manager.setFocused(true);\n            manager.setFocusedKey(focusedKey);\n            // If no default focus key is selected, focus the collection itself.\n            if (focusedKey == null && !shouldUseVirtualFocus) $eCAIO$focusSafely(ref.current);\n        }\n        autoFocusRef.current = false;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    // If not virtualized, scroll the focused element into view when the focusedKey changes.\n    // When virtualized, Virtualizer handles this internally.\n    $eCAIO$useEffect(()=>{\n        if (!isVirtualized && manager.focusedKey && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) $eCAIO$scrollIntoView(scrollRef.current, element);\n        }\n    }, [\n        isVirtualized,\n        scrollRef,\n        manager.focusedKey\n    ]);\n    let handlers = {\n        onKeyDown: onKeyDown,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onMouseDown (e) {\n            // Ignore events that bubbled through portals.\n            if (e.currentTarget.contains(e.target)) // Prevent focus going to the collection when clicking on the scrollbar.\n            e.preventDefault();\n        }\n    };\n    let { typeSelectProps: typeSelectProps  } = $fb3050f43d946246$export$e32c88dfddc6e1d8({\n        keyboardDelegate: delegate,\n        selectionManager: manager\n    });\n    if (!disallowTypeAhead) handlers = $eCAIO$mergeProps(typeSelectProps, handlers);\n    // If nothing is focused within the collection, make the collection itself tabbable.\n    // This will be marshalled to either the first or last item depending on where focus came from.\n    // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n    // to move real DOM focus to the element anyway.\n    let tabIndex;\n    if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;\n    return {\n        collectionProps: {\n            ...handlers,\n            tabIndex: tabIndex\n        }\n    };\n}\n\n\n\n\n\n\n\nfunction $880e95eb8b93ba9a$export$ecf600387e221c37(options) {\n    let { selectionManager: manager , key: key , ref: ref , shouldSelectOnPressUp: shouldSelectOnPressUp , isVirtualized: isVirtualized , shouldUseVirtualFocus: shouldUseVirtualFocus , focus: focus , isDisabled: isDisabled , onAction: onAction , allowsDifferentPressOrigin: allowsDifferentPressOrigin  } = options;\n    let onSelect = (e)=>{\n        if (e.pointerType === 'keyboard' && $feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.toggleSelection(key);\n        else {\n            if (manager.selectionMode === 'none') return;\n            if (manager.selectionMode === 'single') {\n                if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);\n                else manager.replaceSelection(key);\n            } else if (e && e.shiftKey) manager.extendSelection(key);\n            else if (manager.selectionBehavior === 'toggle' || e && ($feb5ffebff200149$export$16792effe837dba3(e) || e.pointerType === 'touch' || e.pointerType === 'virtual')) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n            manager.toggleSelection(key);\n            else manager.replaceSelection(key);\n        }\n    };\n    // Focus the associated DOM node when this item becomes the focusedKey\n    $eCAIO$useEffect(()=>{\n        let isFocused = key === manager.focusedKey;\n        if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n            if (focus) focus();\n            else $eCAIO$focusSafely(ref.current);\n        }\n    }, [\n        ref,\n        key,\n        manager.focusedKey,\n        manager.childFocusStrategy,\n        manager.isFocused,\n        shouldUseVirtualFocus\n    ]);\n    // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n    // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n    // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n    let itemProps = {\n    };\n    if (!shouldUseVirtualFocus) itemProps = {\n        tabIndex: key === manager.focusedKey ? 0 : -1,\n        onFocus (e) {\n            if (e.target === ref.current) manager.setFocusedKey(key);\n        }\n    };\n    // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n    // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n    // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n    // With touch, onAction occurs on single tap, and long press enters selection mode.\n    isDisabled = isDisabled || manager.isDisabled(key);\n    let allowsSelection = !isDisabled && manager.canSelectItem(key);\n    let allowsActions = onAction && !isDisabled;\n    let hasPrimaryAction = allowsActions && (manager.selectionBehavior === 'replace' ? !allowsSelection : manager.isEmpty);\n    let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n    let hasAction = hasPrimaryAction || hasSecondaryAction;\n    let modality = $eCAIO$useRef(null);\n    let longPressEnabled = hasAction && allowsSelection;\n    let longPressEnabledOnPressStart = $eCAIO$useRef(false);\n    let hadPrimaryActionOnPressStart = $eCAIO$useRef(false);\n    // By default, selection occurs on pointer down. This can be strange if selecting an\n    // item causes the UI to disappear immediately (e.g. menus).\n    // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n    // onPress requires a pointer down event on the same element as pointer up. For menus,\n    // we want to be able to have the pointer down on the trigger that opens the menu and\n    // the pointer up on the menu item rather than requiring a separate press.\n    // For keyboard events, selection still occurs on key down.\n    let itemPressProps = {\n    };\n    if (shouldSelectOnPressUp) {\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            longPressEnabledOnPressStart.current = longPressEnabled;\n            if (e.pointerType === 'keyboard' && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);\n        };\n        // If allowsDifferentPressOrigin, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n        // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n        if (!allowsDifferentPressOrigin) itemPressProps.onPress = (e)=>{\n            if (hasPrimaryAction || hasSecondaryAction && e.pointerType !== 'mouse') {\n                if (e.pointerType === 'keyboard' && !$880e95eb8b93ba9a$var$isActionKey()) return;\n                onAction();\n            } else if (e.pointerType !== 'keyboard') onSelect(e);\n        };\n        else {\n            itemPressProps.onPressUp = (e)=>{\n                if (e.pointerType !== 'keyboard') onSelect(e);\n            };\n            itemPressProps.onPress = hasPrimaryAction ? ()=>onAction()\n             : null;\n        }\n    } else {\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            longPressEnabledOnPressStart.current = longPressEnabled;\n            hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n            // Select on mouse down unless there is a primary action which will occur on mouse up.\n            // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n            // and the Enter key performs onAction on key up.\n            if (e.pointerType === 'mouse' && !hasPrimaryAction || e.pointerType === 'keyboard' && (!onAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);\n        };\n        itemPressProps.onPress = (e)=>{\n            // Selection occurs on touch up. Primary actions always occur on pointer up.\n            // Both primary and secondary actions occur on Enter key up. The only exception\n            // is secondary actions, which occur on double click with a mouse.\n            if (e.pointerType === 'touch' || e.pointerType === 'pen' || e.pointerType === 'virtual' || e.pointerType === 'keyboard' && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current) {\n                if (hasAction) onAction();\n                else onSelect(e);\n            }\n        };\n    }\n    if (!isVirtualized) itemProps['data-key'] = key;\n    itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n    let { pressProps: pressProps , isPressed: isPressed  } = $eCAIO$usePress(itemPressProps);\n    // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n    let onDoubleClick = hasSecondaryAction ? (e)=>{\n        if (modality.current === 'mouse') {\n            e.stopPropagation();\n            e.preventDefault();\n            onAction();\n        }\n    } : undefined;\n    // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n    // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n    // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n    let { longPressProps: longPressProps  } = $eCAIO$useLongPress({\n        isDisabled: !longPressEnabled,\n        onLongPress (e) {\n            if (e.pointerType === 'touch') {\n                onSelect(e);\n                manager.setSelectionBehavior('toggle');\n            }\n        }\n    });\n    // Prevent native drag and drop on long press if we also select on long press.\n    // Once the user is in selection mode, they can long press again to drag.\n    let onDragStart = (e)=>{\n        if (modality.current === 'touch' && longPressEnabledOnPressStart.current) e.preventDefault();\n    };\n    return {\n        itemProps: $eCAIO$mergeProps(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {\n        }, longPressEnabled ? longPressProps : {\n        }, {\n            onDoubleClick: onDoubleClick,\n            onDragStart: onDragStart\n        }),\n        isPressed: isPressed,\n        isSelected: manager.isSelected(key),\n        isDisabled: isDisabled,\n        allowsSelection: allowsSelection,\n        hasAction: hasAction\n    };\n}\nfunction $880e95eb8b93ba9a$var$isActionKey() {\n    let event = window.event;\n    return (event === null || event === void 0 ? void 0 : event.key) === 'Enter';\n}\nfunction $880e95eb8b93ba9a$var$isSelectionKey() {\n    let event = window.event;\n    return (event === null || event === void 0 ? void 0 : event.key) === ' ' || (event === null || event === void 0 ? void 0 : event.code) === 'Space';\n}\n\n\n\nclass $2a25aae57d74318e$export$a05409b8bb224a5a {\n    getKeyBelow(key) {\n        key = this.collection.getKeyAfter(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getKeyAbove(key) {\n        key = this.collection.getKeyBefore(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getFirstKey() {\n        let key = this.collection.getFirstKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getLastKey() {\n        let key = this.collection.getLastKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getItem(key) {\n        return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n    }\n    getKeyPageAbove(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n        while(item && item.offsetTop > pageY){\n            key = this.getKeyAbove(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyPageBelow(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n        while(item && item.offsetTop < pageY){\n            key = this.getKeyBelow(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyForSearch(search, fromKey) {\n        if (!this.collator) return null;\n        let collection = this.collection;\n        let key = fromKey || this.getFirstKey();\n        while(key != null){\n            let item = collection.getItem(key);\n            let substring = item.textValue.slice(0, search.length);\n            if (item.textValue && this.collator.compare(substring, search) === 0) return key;\n            key = this.getKeyBelow(key);\n        }\n        return null;\n    }\n    constructor(collection, disabledKeys, ref, collator){\n        this.collection = collection;\n        this.disabledKeys = disabledKeys;\n        this.ref = ref;\n        this.collator = collator;\n    }\n}\n\n\n\n\nfunction $982254629710d113$export$b95089534ab7c1fd(props) {\n    let { selectionManager: selectionManager , collection: collection , disabledKeys: disabledKeys , ref: ref , keyboardDelegate: keyboardDelegate , autoFocus: autoFocus , shouldFocusWrap: shouldFocusWrap , isVirtualized: isVirtualized , disallowEmptySelection: disallowEmptySelection , selectOnFocus: selectOnFocus = selectionManager.selectionBehavior === 'replace' , disallowTypeAhead: disallowTypeAhead , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation  } = props;\n    // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n    // When virtualized, the layout object will be passed in as a prop and override this.\n    let collator = $eCAIO$useCollator({\n        usage: 'search',\n        sensitivity: 'base'\n    });\n    let delegate = $eCAIO$useMemo(()=>keyboardDelegate || new $2a25aae57d74318e$export$a05409b8bb224a5a(collection, disabledKeys, ref, collator)\n    , [\n        keyboardDelegate,\n        collection,\n        disabledKeys,\n        ref,\n        collator\n    ]);\n    let { collectionProps: collectionProps  } = $ae20dd8cbca75726$export$d6daf82dcd84e87c({\n        ref: ref,\n        selectionManager: selectionManager,\n        keyboardDelegate: delegate,\n        autoFocus: autoFocus,\n        shouldFocusWrap: shouldFocusWrap,\n        disallowEmptySelection: disallowEmptySelection,\n        selectOnFocus: selectOnFocus,\n        disallowTypeAhead: disallowTypeAhead,\n        shouldUseVirtualFocus: shouldUseVirtualFocus,\n        allowsTabNavigation: allowsTabNavigation,\n        isVirtualized: isVirtualized,\n        scrollRef: ref\n    });\n    return {\n        listProps: collectionProps\n    };\n}\n\n\n\n\n\n\nexport {$ae20dd8cbca75726$export$d6daf82dcd84e87c as useSelectableCollection, $880e95eb8b93ba9a$export$ecf600387e221c37 as useSelectableItem, $982254629710d113$export$b95089534ab7c1fd as useSelectableList, $2a25aae57d74318e$export$a05409b8bb224a5a as ListKeyboardDelegate, $fb3050f43d946246$export$e32c88dfddc6e1d8 as useTypeSelect};\n//# sourceMappingURL=module.js.map\n","import {useId as $1Hnir$useId, filterDOMProps as $1Hnir$filterDOMProps, mergeProps as $1Hnir$mergeProps, useSlotId as $1Hnir$useSlotId} from \"@react-aria/utils\";\nimport {useLocalizedStringFormatter as $1Hnir$useLocalizedStringFormatter} from \"@react-aria/i18n\";\nimport {useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible} from \"@react-aria/interactions\";\nimport {useOverlayTrigger as $1Hnir$useOverlayTrigger} from \"@react-aria/overlays\";\nimport {useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem} from \"@react-aria/selection\";\nimport {getItemCount as $1Hnir$getItemCount} from \"@react-stately/collections\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = {\n    \"longPressMessage\": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`\n};\n\n\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = {\n    \"longPressMessage\": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`\n};\n\n\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = {\n    \"longPressMessage\": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`\n};\n\n\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = {\n    \"longPressMessage\": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`\n};\n\n\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = {\n    \"longPressMessage\": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`\n};\n\n\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = {\n    \"longPressMessage\": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`\n};\n\n\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = {\n    \"longPressMessage\": `Long press or press Alt + ArrowDown to open menu`\n};\n\n\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = {\n    \"longPressMessage\": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`\n};\n\n\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = {\n    \"longPressMessage\": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`\n};\n\n\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = {\n    \"longPressMessage\": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`\n};\n\n\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = {\n    \"longPressMessage\": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`\n};\n\n\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = {\n    \"longPressMessage\": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`\n};\n\n\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = {\n    \"longPressMessage\": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`\n};\n\n\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = {\n    \"longPressMessage\": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`\n};\n\n\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = {\n    \"longPressMessage\": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`\n};\n\n\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = {\n    \"longPressMessage\": `長押しまたは Alt+下矢印キーでメニューを開く`\n};\n\n\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = {\n    \"longPressMessage\": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`\n};\n\n\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = {\n    \"longPressMessage\": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`\n};\n\n\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = {\n    \"longPressMessage\": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`\n};\n\n\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = {\n    \"longPressMessage\": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`\n};\n\n\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = {\n    \"longPressMessage\": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`\n};\n\n\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = {\n    \"longPressMessage\": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`\n};\n\n\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = {\n    \"longPressMessage\": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`\n};\n\n\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = {\n    \"longPressMessage\": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`\n};\n\n\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = {\n    \"longPressMessage\": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`\n};\n\n\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = {\n    \"longPressMessage\": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`\n};\n\n\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = {\n    \"longPressMessage\": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`\n};\n\n\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = {\n    \"longPressMessage\": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`\n};\n\n\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = {\n    \"longPressMessage\": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`\n};\n\n\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = {\n    \"longPressMessage\": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`\n};\n\n\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = {\n    \"longPressMessage\": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`\n};\n\n\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = {\n    \"longPressMessage\": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`\n};\n\n\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = {\n    \"longPressMessage\": `长按或按 Alt + 向下方向键以打开菜单`\n};\n\n\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = {\n    \"longPressMessage\": `長按或按 Alt+向下鍵以開啟功能表`\n};\n\n\n$9bdd31893c9700c3$exports = {\n    \"ar-AE\": $c0398ad35c3639b7$exports,\n    \"bg-BG\": $7af657c4165927c3$exports,\n    \"cs-CZ\": $d95d4da6d531ab81$exports,\n    \"da-DK\": $24ebda9c775dca17$exports,\n    \"de-DE\": $743e0dfca6cab1e9$exports,\n    \"el-GR\": $a2f41026e05f1c84$exports,\n    \"en-US\": $43b800e97c901737$exports,\n    \"es-ES\": $442f5f6ac211e29f$exports,\n    \"et-EE\": $dff280acfeb2d8ac$exports,\n    \"fi-FI\": $51608325613944d7$exports,\n    \"fr-FR\": $c4a1b1eabeaa87be$exports,\n    \"he-IL\": $8c74815cdee18d1b$exports,\n    \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n    \"hu-HU\": $a89a74a39eba465a$exports,\n    \"it-IT\": $edc7c66594a0ae8a$exports,\n    \"ja-JP\": $f1ab51510712db52$exports,\n    \"ko-KR\": $f9b672d9b82fa3d6$exports,\n    \"lt-LT\": $a385f3910feda499$exports,\n    \"lv-LV\": $4f1bde932c441789$exports,\n    \"nb-NO\": $914a51a8a594d5be$exports,\n    \"nl-NL\": $89aaf803103bb500$exports,\n    \"pl-PL\": $c685891476dbaaca$exports,\n    \"pt-BR\": $885879b9b10c2959$exports,\n    \"pt-PT\": $6b39616688a51692$exports,\n    \"ro-RO\": $f26362aed63f47e2$exports,\n    \"ru-RU\": $06cbade644558bf0$exports,\n    \"sk-SK\": $0a391ff68f9d59b1$exports,\n    \"sl-SI\": $8193cf0e649c7928$exports,\n    \"sr-SP\": $f398debcce5a5c55$exports,\n    \"sv-SE\": $9e9fef000aa4c013$exports,\n    \"tr-TR\": $c016c8183bbe3d68$exports,\n    \"uk-UA\": $ca4f6c8462244e62$exports,\n    \"zh-CN\": $2d9960c02ccac927$exports,\n    \"zh-TW\": $f1b682a4c8c5631c$exports\n};\n\n\n\n\n\n\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n    let { type: type = 'menu' , isDisabled: isDisabled , trigger: trigger = 'press'  } = props;\n    let menuTriggerId = $1Hnir$useId();\n    let { triggerProps: triggerProps , overlayProps: overlayProps  } = $1Hnir$useOverlayTrigger({\n        type: type\n    }, state, ref);\n    let onKeyDown = (e)=>{\n        if (isDisabled) return;\n        if (trigger === 'longPress' && !e.altKey) return;\n        if (ref && ref.current) switch(e.key){\n            case 'Enter':\n            case ' ':\n                if (trigger === 'longPress') return;\n            // fallthrough\n            case 'ArrowDown':\n                // Stop propagation, unless it would already be handled by useKeyboard.\n                if (!('continuePropagation' in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle('first');\n                break;\n            case 'ArrowUp':\n                if (!('continuePropagation' in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle('last');\n                break;\n        }\n    };\n    let stringFormatter = $1Hnir$useLocalizedStringFormatter((/*@__PURE__*/$parcel$interopDefault($9bdd31893c9700c3$exports)));\n    let { longPressProps: longPressProps  } = $1Hnir$useLongPress({\n        isDisabled: isDisabled || trigger !== 'longPress',\n        accessibilityDescription: stringFormatter.format('longPressMessage'),\n        onLongPressStart () {\n            state.close();\n        },\n        onLongPress () {\n            state.open('first');\n        }\n    });\n    let pressProps = {\n        onPressStart (e) {\n            // For consistency with native, open the menu on mouse/key down, but touch up.\n            if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) // If opened with a screen reader, auto focus the first item.\n            // Otherwise, the menu itself will be focused.\n            state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n        },\n        onPress (e) {\n            if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n        }\n    };\n    // omit onPress from triggerProps since we override it above.\n    delete triggerProps.onPress;\n    return {\n        menuTriggerProps: {\n            ...triggerProps,\n            ...trigger === 'press' ? pressProps : longPressProps,\n            id: menuTriggerId,\n            onKeyDown: onKeyDown\n        },\n        menuProps: {\n            ...overlayProps,\n            'aria-labelledby': menuTriggerId,\n            autoFocus: state.focusStrategy,\n            onClose: state.close\n        }\n    };\n}\n\n\n\n\nconst $d5336fe17ce95402$export$6f49b4016bfc8d56 = new WeakMap();\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n    let { shouldFocusWrap: shouldFocusWrap = true , ...otherProps } = props;\n    if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n    let domProps = $1Hnir$filterDOMProps(props, {\n        labelable: true\n    });\n    let { listProps: listProps  } = $1Hnir$useSelectableList({\n        ...otherProps,\n        ref: ref,\n        selectionManager: state.selectionManager,\n        collection: state.collection,\n        disabledKeys: state.disabledKeys,\n        shouldFocusWrap: shouldFocusWrap\n    });\n    $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {\n        onClose: props.onClose,\n        onAction: props.onAction\n    });\n    return {\n        menuProps: $1Hnir$mergeProps(domProps, {\n            role: 'menu',\n            ...listProps\n        })\n    };\n}\n\n\n\n\n\n\n\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n    let { key: key , closeOnSelect: closeOnSelect , isVirtualized: isVirtualized  } = props;\n    var _isDisabled;\n    let isDisabled = (_isDisabled = props.isDisabled) !== null && _isDisabled !== void 0 ? _isDisabled : state.disabledKeys.has(key);\n    var _isSelected;\n    let isSelected = (_isSelected = props.isSelected) !== null && _isSelected !== void 0 ? _isSelected : state.selectionManager.isSelected(key);\n    let isFocused = state.selectionManager.focusedKey === key;\n    let data = $d5336fe17ce95402$export$6f49b4016bfc8d56.get(state);\n    let onClose = props.onClose || data.onClose;\n    let onAction = props.onAction || data.onAction;\n    let role = 'menuitem';\n    if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';\n    else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n    let labelId = $1Hnir$useSlotId();\n    let descriptionId = $1Hnir$useSlotId();\n    let keyboardId = $1Hnir$useSlotId();\n    let ariaProps = {\n        'aria-disabled': isDisabled,\n        role: role,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': labelId,\n        'aria-describedby': [\n            descriptionId,\n            keyboardId\n        ].filter(Boolean).join(' ') || undefined\n    };\n    if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n    if (isVirtualized) {\n        ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n        ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n    }\n    let onKeyDown = (e)=>{\n        // Ignore repeating events, which may have started on the menu trigger before moving\n        // focus to the menu item. We want to wait for a second complete key press sequence.\n        if (e.repeat) return;\n        switch(e.key){\n            case ' ':\n                if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n                break;\n            case 'Enter':\n                // The Enter key should always close on select, except if overridden.\n                if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n                break;\n        }\n    };\n    let onPressStart = (e)=>{\n        if (e.pointerType === 'keyboard' && onAction) onAction(key);\n    };\n    let onPressUp = (e)=>{\n        if (e.pointerType !== 'keyboard') {\n            if (onAction) onAction(key);\n            // Pressing a menu item should close by default in single selection mode but not multiple\n            // selection mode, except if overridden by the closeOnSelect prop.\n            if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n        }\n    };\n    let { itemProps: itemProps  } = $1Hnir$useSelectableItem({\n        selectionManager: state.selectionManager,\n        key: key,\n        ref: ref,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true\n    });\n    let { pressProps: pressProps , isPressed: isPressed  } = $1Hnir$usePress({\n        onPressStart: onPressStart,\n        onPressUp: onPressUp,\n        isDisabled: isDisabled\n    });\n    let { hoverProps: hoverProps  } = $1Hnir$useHover({\n        isDisabled: isDisabled,\n        onHoverStart () {\n            if (!$1Hnir$isFocusVisible()) {\n                state.selectionManager.setFocused(true);\n                state.selectionManager.setFocusedKey(key);\n            }\n        }\n    });\n    return {\n        menuItemProps: {\n            ...ariaProps,\n            ...$1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n                onKeyDown: onKeyDown\n            })\n        },\n        labelProps: {\n            id: labelId\n        },\n        descriptionProps: {\n            id: descriptionId\n        },\n        keyboardShortcutProps: {\n            id: keyboardId\n        },\n        isFocused: isFocused,\n        isSelected: isSelected,\n        isPressed: isPressed,\n        isDisabled: isDisabled\n    };\n}\n\n\n\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n    let { heading: heading , 'aria-label': ariaLabel  } = props;\n    let headingId = $1Hnir$useId();\n    return {\n        itemProps: {\n            role: 'presentation'\n        },\n        headingProps: heading ? {\n            // Techincally, menus cannot contain headings according to ARIA.\n            // We hide the heading from assistive technology, and only use it\n            // as a label for the nested group.\n            id: headingId,\n            'aria-hidden': true\n        } : {\n        },\n        groupProps: {\n            role: 'group',\n            'aria-label': ariaLabel,\n            'aria-labelledby': heading ? headingId : undefined\n        }\n    };\n}\n\n\n\n\nexport {$168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nimport { DismissButton, useOverlay } from '@react-aria/overlays';\nimport { FocusScope } from '@react-aria/focus';\nimport { mergeProps } from '@react-aria/utils';\nimport { PopperProps, usePopper } from 'react-popper';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ListItemPreliminaryItem } from 'list/ListItemFactory';\nimport { CollectionChildren } from '@react-types/shared';\n\nexport type PopoverProps = {\n  children: CollectionChildren<ListItemPreliminaryItem>;\n  isOpen: boolean;\n  onClose: () => void;\n  placement?: PopperProps<{}>['placement'];\n  triggerRef?: React.RefObject<HTMLElement>;\n};\n\nexport const Popover = React.forwardRef(\n  (\n    { children, isOpen, onClose, placement, triggerRef }: PopoverProps,\n    forwardedRef: React.Ref<HTMLDivElement | null>\n  ) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const { overlayProps } = useOverlay(\n      {\n        onClose,\n        isOpen,\n        isDismissable: true,\n      },\n      ref\n    );\n\n    const { styles: popperStyle, attributes: popperProps } = usePopper(\n      triggerRef?.current,\n      ref.current,\n      {\n        placement,\n        strategy: 'fixed',\n      }\n    );\n\n    return (\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            key={'Popover'}\n            initial={{\n              opacity: 0,\n            }}\n            animate={{\n              opacity: 1,\n            }}\n            exit={{ opacity: 0 }}\n            {...(mergeProps(overlayProps, popperProps.popper ?? {}) as any)}\n            style={{ ...popperStyle.popper, zIndex: 10 }}\n            ref={ref}\n          >\n            <FocusScope restoreFocus>\n              <DismissButton onDismiss={onClose} />\n              {children}\n              <DismissButton onDismiss={onClose} />\n            </FocusScope>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n);\nPopover.displayName = 'Popover';\n","import {useMemo as $1OoTj$useMemo, useEffect as $1OoTj$useEffect} from \"react\";\nimport {useMultipleSelectionState as $1OoTj$useMultipleSelectionState, SelectionManager as $1OoTj$SelectionManager} from \"@react-stately/selection\";\nimport {useCollection as $1OoTj$useCollection} from \"@react-stately/collections\";\nimport {useControlledState as $1OoTj$useControlledState} from \"@react-stately/utils\";\n\n\n\nvar tmp = Symbol.iterator;\nclass $05ca4cd7c4a5a999$export$863faf230ee2118a {\n    *[tmp]() {\n        yield* this.iterable;\n    }\n    get size() {\n        return this.keyMap.size;\n    }\n    getKeys() {\n        return this.keyMap.keys();\n    }\n    getKeyBefore(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.prevKey : null;\n    }\n    getKeyAfter(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.nextKey : null;\n    }\n    getFirstKey() {\n        return this.firstKey;\n    }\n    getLastKey() {\n        return this.lastKey;\n    }\n    getItem(key) {\n        return this.keyMap.get(key);\n    }\n    at(idx) {\n        const keys = [\n            ...this.getKeys()\n        ];\n        return this.getItem(keys[idx]);\n    }\n    constructor(nodes, { expandedKeys: expandedKeys  } = {\n    }){\n        this.keyMap = new Map();\n        this.iterable = nodes;\n        expandedKeys = expandedKeys || new Set();\n        let visit = (node)=>{\n            this.keyMap.set(node.key, node);\n            if (node.childNodes && (node.type === 'section' || expandedKeys.has(node.key))) for (let child of node.childNodes)visit(child);\n        };\n        for (let node2 of nodes)visit(node2);\n        let last;\n        let index = 0;\n        for (let [key, node1] of this.keyMap){\n            if (last) {\n                last.nextKey = key;\n                node1.prevKey = last.key;\n            } else {\n                this.firstKey = key;\n                node1.prevKey = undefined;\n            }\n            if (node1.type === 'item') node1.index = index++;\n            last = node1;\n            // Set nextKey as undefined since this might be the last node\n            // If it isn't the last node, last.nextKey will properly set at start of new loop\n            last.nextKey = undefined;\n        }\n        this.lastKey = last === null || last === void 0 ? void 0 : last.key;\n    }\n}\n\n\n\n\nfunction $875d6693e12af071$export$728d6ba534403756(props) {\n    let [expandedKeys, setExpandedKeys] = $1OoTj$useControlledState(props.expandedKeys ? new Set(props.expandedKeys) : undefined, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(), props.onExpandedChange);\n    let selectionState = $1OoTj$useMultipleSelectionState(props);\n    let disabledKeys = $1OoTj$useMemo(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set()\n    , [\n        props.disabledKeys\n    ]);\n    let tree = $1OoTj$useCollection(props, (nodes)=>new $05ca4cd7c4a5a999$export$863faf230ee2118a(nodes, {\n            expandedKeys: expandedKeys\n        })\n    , null, [\n        expandedKeys\n    ]);\n    // Reset focused key if that item is deleted from the collection.\n    $1OoTj$useEffect(()=>{\n        if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey)) selectionState.setFocusedKey(null);\n    }, [\n        tree,\n        selectionState.focusedKey\n    ]);\n    let onToggle = (key)=>{\n        setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));\n    };\n    return {\n        collection: tree,\n        expandedKeys: expandedKeys,\n        disabledKeys: disabledKeys,\n        toggleKey: onToggle,\n        selectionManager: new $1OoTj$SelectionManager(tree, selectionState)\n    };\n}\nfunction $875d6693e12af071$var$toggleKey(set, key) {\n    let res = new Set(set);\n    if (res.has(key)) res.delete(key);\n    else res.add(key);\n    return res;\n}\n\n\n\n\nexport {$875d6693e12af071$export$728d6ba534403756 as useTreeState};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nimport { useFocus } from '@react-aria/interactions';\nimport { Item as AriaItem } from '@react-stately/collections';\nimport { useMenuItem } from '@react-aria/menu';\nimport { Node } from '@react-types/shared';\nimport { mergeProps } from '@react-aria/utils';\nimport { TreeState } from '@react-stately/tree';\nimport { ListItem } from '../list';\n\nimport styles from './Menu.module.scss';\n\nexport const Item = AriaItem;\n\nexport interface MenuItemProps {\n  item: Node<object>;\n  state: TreeState<object>;\n  isDisabled?: boolean;\n  isDivider?: boolean;\n  onAction?: (_key: React.Key) => void;\n  onClose?: () => void;\n}\n\nexport const MenuItem = React.forwardRef(\n  (\n    {\n      item,\n      state,\n      isDisabled = false,\n      isDivider = false,\n      onAction,\n      onClose,\n    }: MenuItemProps,\n    forwardedRef: React.Ref<HTMLLIElement | null>\n  ) => {\n    // Get props for the menu item element\n    const ref = React.useRef<HTMLLIElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const { menuItemProps } = useMenuItem(\n      {\n        key: item.key,\n        isDisabled: isDisabled || isDivider,\n        onAction,\n        onClose,\n      },\n      state,\n      ref\n    );\n\n    // Handle focus events so we can apply highlighted\n    // style to the focused menu item\n    const [isFocused, setFocused] = React.useState(false);\n    const { focusProps } = useFocus({\n      onFocusChange: setFocused,\n      isDisabled: isDisabled || isDivider,\n    });\n\n    const leftSection = Array.isArray(item.rendered) ? item.rendered[0] : null;\n    const content = Array.isArray(item.rendered)\n      ? item.rendered[1]\n      : item.rendered;\n\n    return (\n      <ListItem\n        {...mergeProps(menuItemProps, focusProps)}\n        ref={ref}\n        isSelected={isFocused}\n        leftSection={<div className={styles.leftSection}>{leftSection}</div>}\n      >\n        {content}\n      </ListItem>\n    );\n  }\n);\nMenuItem.displayName = 'MenuItem';\n","import * as React from 'react';\nimport { useTreeState } from '@react-stately/tree';\nimport { CollectionChildren } from '@react-types/shared';\nimport { useMenu } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { MenuItem } from './MenuItem';\nimport { List, ListProps } from '../list';\nimport clsx from 'clsx';\n\nimport styles from './Menu.module.scss';\n\nexport type WithDescription =\n  | {\n      /**\n       * Provide a short title describing the menu.\n       * This is a shothand for the `aria-label` attribute.\n       */\n      title: string;\n    }\n  | { 'aria-label': string }\n  | { 'aria-labelledby': string };\n\nexport type MenuProps = ListProps &\n  WithDescription & {\n    children: CollectionChildren<object>;\n    onClose?: () => void;\n    onAction?: (_key: React.Key) => void;\n  };\n\nexport const Menu = React.forwardRef(\n  (\n    { className, title, onAction, onClose, ...props }: MenuProps,\n    forwardedRef: React.Ref<HTMLUListElement | null>\n  ) => {\n    const ref = React.useRef<HTMLUListElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const state = useTreeState({\n      children: props.children,\n      selectionMode: 'none',\n    });\n\n    const { menuProps } = useMenu(\n      {\n        'aria-label': title,\n        ...props,\n      },\n      state,\n      ref\n    );\n\n    return (\n      <List\n        className={clsx(styles.root, className)}\n        {...mergeProps(menuProps, props)}\n        ref={ref}\n      >\n        {[...state.collection].map((item) => (\n          <MenuItem\n            key={item.key}\n            item={item as any}\n            state={state}\n            onAction={onAction}\n            onClose={onClose}\n          />\n        ))}\n        {props.children}\n      </List>\n    );\n  }\n);\nMenu.displayName = 'Menu';\n","import * as React from 'react';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport { CollectionChildren } from '@react-types/shared';\nimport { Button, ButtonProps } from '../button/Button';\nimport { useButton } from '@react-aria/button';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { Popover, PopoverProps } from '../popover/new/Popover';\nimport { Menu, WithDescription } from './Menu';\nimport clsx from 'clsx';\n\nimport styles from './MenuButton.module.scss';\n\nexport type MenuButtonProps = {\n  buttonProps: Omit<ButtonProps, 'ref'>;\n  className?: string;\n  style?: React.CSSProperties;\n  children: CollectionChildren<object>;\n  placement?: PopoverProps['placement'];\n  onOpenChange?: (_isOpen: boolean) => void;\n  onAction?: (_action: React.Key) => void;\n} & WithDescription;\n\nexport const MenuButton = React.forwardRef(\n  (\n    {\n      buttonProps,\n      className,\n      onOpenChange,\n      placement,\n      style,\n      ...props\n    }: MenuButtonProps,\n    forwardedRef: React.Ref<HTMLButtonElement | null>\n  ) => {\n    const isBrowser = typeof window !== 'undefined';\n\n    const ref = React.useRef<HTMLButtonElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const state = useMenuTriggerState({\n      closeOnSelect: true,\n      onOpenChange,\n    });\n    const { menuTriggerProps, menuProps } = useMenuTrigger(\n      { type: 'menu', isDisabled: buttonProps.disabled },\n      state,\n      ref\n    );\n    const element = React.useRef<HTMLDivElement | null>(null);\n    const { buttonProps: ariaButtonProps } = useButton(menuTriggerProps, ref);\n\n    React.useEffect(() => () => element.current?.remove(), []);\n\n    if (isBrowser && element.current === null) {\n      element.current = document.createElement('div');\n      const dialogContainer =\n        document.getElementById('dialogContainer') ||\n        (() => {\n          const container = document.createElement('div');\n          container.id = 'dialogContainer';\n          document.body.appendChild(container);\n          return container;\n        })();\n      dialogContainer.appendChild(element.current);\n    }\n\n    return (\n      <div className={clsx(styles.root, className)} style={style}>\n        <Button ref={ref} {...buttonProps} {...ariaButtonProps} />\n        <Popover\n          isOpen={state.isOpen}\n          onClose={state.close}\n          placement={placement}\n          triggerRef={ref}\n        >\n          <Menu\n            {...mergeProps(\n              { ...menuProps, autoFocus: !!menuProps.autoFocus },\n              props\n            )}\n            onClose={state.close}\n          >\n            {props.children}\n          </Menu>\n        </Popover>\n      </div>\n    );\n  }\n);\nMenuButton.displayName = 'MenuButton';\n"],"names":["$Qsto2$useRef","$Qsto2$useState","$Qsto2$useMemo","$Qsto2$useControlledState","$Qsto2$useEffect","$tyW6A$react","$tyW6A$useMemo","$tyW6A$useRef","$9Xvoh$useOverlayTriggerState","$9Xvoh$useState","$eCAIO$isAppleDevice","$eCAIO$isMac","$eCAIO$useRef","$eCAIO$useLocale","$eCAIO$getFocusableTreeWalker","$eCAIO$focusWithoutScrolling","$eCAIO$useEvent","$eCAIO$scrollIntoView","$eCAIO$useEffect","$eCAIO$focusSafely","$eCAIO$mergeProps","$eCAIO$usePress","$eCAIO$useLongPress","$eCAIO$useCollator","$eCAIO$useMemo","$1Hnir$useId","$1Hnir$useOverlayTrigger","$1Hnir$useLocalizedStringFormatter","$1Hnir$useLongPress","$1Hnir$filterDOMProps","$1Hnir$useSelectableList","$1Hnir$mergeProps","$1Hnir$useSlotId","$1Hnir$getItemCount","$1Hnir$useSelectableItem","$1Hnir$usePress","$1Hnir$useHover","$1Hnir$isFocusVisible","React.forwardRef","children","isOpen","onClose","placement","triggerRef","React.useRef","React","overlayProps","popperStyle","popperProps","_jsx","mergeProps","popper","_jsxs","FocusScope","DismissButton","Popover","$1OoTj$useControlledState","$1OoTj$useMultipleSelectionState","$1OoTj$useMemo","$1OoTj$useCollection","$1OoTj$useEffect","$1OoTj$SelectionManager","AriaItem","item","state","onAction","menuItemProps","key","isDivider","React.useState","focusProps","setFocused","isFocused","styles","leftSection","content","MenuItem","className","title","props","useTreeState","menuProps","Menu","buttonProps","onOpenChange","style","useMenuTriggerState","menuTriggerProps","disabled","ariaButtonProps","element","dialogContainer","container","document","close","ref","autoFocus","MenuButton"],"mappings":"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"}