{"version":3,"file":"Select.652e31de.js","sources":["../../node_modules/@react-stately/toggle/dist/module.js","../../node_modules/@react-aria/toggle/dist/module.js","../../node_modules/@react-aria/checkbox/dist/module.js","../../src/form/checkbox/Checkbox.tsx","../../src/form/radio/Radio.tsx","../../src/form/radio/RadioGroup.tsx","../../src/form/select/Select.tsx"],"sourcesContent":["import {useControlledState as $bOkae$useControlledState} from \"@react-stately/utils\";\n\n\nfunction $3017fa7ffdddec74$export$8042c6c013fd5226(props = {\n}) {\n    let { isReadOnly: isReadOnly  } = props;\n    // have to provide an empty function so useControlledState doesn't throw a fit\n    // can't use useControlledState's prop calling because we need the event object from the change\n    let [isSelected, setSelected] = $bOkae$useControlledState(props.isSelected, props.defaultSelected || false, props.onChange);\n    function updateSelected(value) {\n        if (!isReadOnly) setSelected(value);\n    }\n    function toggleState() {\n        if (!isReadOnly) setSelected(!isSelected);\n    }\n    return {\n        isSelected: isSelected,\n        setSelected: updateSelected,\n        toggle: toggleState\n    };\n}\n\n\n\n\nexport {$3017fa7ffdddec74$export$8042c6c013fd5226 as useToggleState};\n//# sourceMappingURL=module.js.map\n","import {mergeProps as $7CUUz$mergeProps, filterDOMProps as $7CUUz$filterDOMProps} from \"@react-aria/utils\";\nimport {useFocusable as $7CUUz$useFocusable} from \"@react-aria/focus\";\nimport {usePress as $7CUUz$usePress} from \"@react-aria/interactions\";\n\n\n\n\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n    let { isDisabled: isDisabled = false , isRequired: isRequired , isReadOnly: isReadOnly , value: value , name: name , children: children , 'aria-label': ariaLabel , 'aria-labelledby': ariaLabelledby , validationState: validationState = 'valid'  } = props;\n    let onChange = (e)=>{\n        // since we spread props on label, onChange will end up there as well as in here.\n        // so we have to stop propagation at the lowest level that we care about\n        e.stopPropagation();\n        state.setSelected(e.target.checked);\n    };\n    let hasChildren = children != null;\n    let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n    if (!hasChildren && !hasAriaLabel) console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n    // This handles focusing the input on pointer down, which Safari does not do by default.\n    let { pressProps: pressProps  } = $7CUUz$usePress({\n        isDisabled: isDisabled\n    });\n    let { focusableProps: focusableProps  } = $7CUUz$useFocusable(props, ref);\n    let interactions = $7CUUz$mergeProps(pressProps, focusableProps);\n    let domProps = $7CUUz$filterDOMProps(props, {\n        labelable: true\n    });\n    return {\n        inputProps: $7CUUz$mergeProps(domProps, {\n            'aria-invalid': validationState === 'invalid' || undefined,\n            'aria-errormessage': props['aria-errormessage'],\n            'aria-controls': props['aria-controls'],\n            'aria-readonly': isReadOnly || undefined,\n            'aria-required': isRequired || undefined,\n            onChange: onChange,\n            disabled: isDisabled,\n            value: value,\n            name: name,\n            type: 'checkbox',\n            ...interactions\n        })\n    };\n}\n\n\n\n\nexport {$d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle};\n//# sourceMappingURL=module.js.map\n","import {useEffect as $cKEhs$useEffect} from \"react\";\nimport {useToggle as $cKEhs$useToggle} from \"@react-aria/toggle\";\nimport {filterDOMProps as $cKEhs$filterDOMProps, mergeProps as $cKEhs$mergeProps} from \"@react-aria/utils\";\nimport {useLabel as $cKEhs$useLabel} from \"@react-aria/label\";\nimport {useToggleState as $cKEhs$useToggleState} from \"@react-stately/toggle\";\n\n\n\nfunction $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {\n    let { inputProps: inputProps  } = $cKEhs$useToggle(props, state, inputRef);\n    let { isSelected: isSelected  } = state;\n    let { isIndeterminate: isIndeterminate  } = props;\n    $cKEhs$useEffect(()=>{\n        // indeterminate is a property, but it can only be set via javascript\n        // https://css-tricks.com/indeterminate-checkboxes/\n        if (inputRef.current) inputRef.current.indeterminate = isIndeterminate;\n    });\n    return {\n        inputProps: {\n            ...inputProps,\n            checked: isSelected,\n            'aria-checked': isIndeterminate ? 'mixed' : isSelected\n        }\n    };\n}\n\n\nconst $1ae600c947479353$export$31440636951aa68c = new WeakMap();\n\n\n\n\nfunction $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {\n    let { isDisabled: isDisabled , name: name  } = props;\n    let { labelProps: labelProps , fieldProps: fieldProps  } = $cKEhs$useLabel({\n        ...props,\n        // Checkbox group is not an HTML input element so it\n        // shouldn't be labeled by a <label> element.\n        labelElementType: 'span'\n    });\n    let domProps = $cKEhs$filterDOMProps(props, {\n        labelable: true\n    });\n    // Pass name prop from group to all items by attaching to the state.\n    $1ae600c947479353$export$31440636951aa68c.set(state, name);\n    return {\n        groupProps: $cKEhs$mergeProps(domProps, {\n            role: 'group',\n            'aria-disabled': isDisabled || undefined,\n            ...fieldProps\n        }),\n        labelProps: labelProps\n    };\n}\n\n\n\n\n\nfunction $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {\n    const toggleState = $cKEhs$useToggleState({\n        isReadOnly: props.isReadOnly || state.isReadOnly,\n        isSelected: state.isSelected(props.value),\n        onChange (isSelected) {\n            if (isSelected) state.addValue(props.value);\n            else state.removeValue(props.value);\n            if (props.onChange) props.onChange(isSelected);\n        }\n    });\n    let { inputProps: inputProps  } = $406796ff087fe49b$export$e375f10ce42261c5({\n        ...props,\n        isReadOnly: props.isReadOnly || state.isReadOnly,\n        isDisabled: props.isDisabled || state.isDisabled,\n        name: props.name || $1ae600c947479353$export$31440636951aa68c.get(state)\n    }, toggleState, inputRef);\n    return {\n        inputProps: inputProps\n    };\n}\n\n\n\n\nexport {$406796ff087fe49b$export$e375f10ce42261c5 as useCheckbox, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe as useCheckboxGroup, $fba3e38d5ca8983f$export$353b32fc6898d37d as useCheckboxGroupItem};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nimport type { ToggleProps } from '@react-types/checkbox';\nimport { VisuallyHidden } from '@react-aria/visually-hidden';\nimport { useFocusRing } from '@react-aria/focus';\nimport { useToggleState } from '@react-stately/toggle';\nimport { useCheckbox } from '@react-aria/checkbox';\nimport clsx from 'clsx';\n\nimport styles from './Checkbox.module.scss';\n\nexport type CheckboxProps = {\n  featureColor?: [red: number, green: number, blue: number];\n\n  className?: string;\n  style?: React.CSSProperties;\n\n  children?: React.ReactNode;\n} & ToggleProps &\n  React.AriaAttributes;\n\nexport const Checkbox = React.memo<CheckboxProps>(\n  ({ style, className, featureColor, ...props }) => {\n    const customStyle =\n      featureColor &&\n      ({\n        '--control-indicator-color': featureColor.join(', '),\n      } as React.CSSProperties);\n\n    const ref = React.useRef() as React.MutableRefObject<HTMLInputElement>;\n    const state = useToggleState(props);\n    const { inputProps } = useCheckbox(props, state, ref);\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    return (\n      <label\n        style={{ ...style, ...customStyle }}\n        className={clsx(className, styles.root)}\n      >\n        <VisuallyHidden>\n          <input\n            {...inputProps}\n            {...focusProps}\n            ref={ref}\n            className={clsx(className, styles.input)}\n          />\n        </VisuallyHidden>\n        <div\n          className={clsx(styles.controlIndicator, {\n            [styles.isSelected]: state.isSelected,\n            [styles.isFocusVisible]: isFocusVisible,\n            [styles.isDisabled]: props.isDisabled,\n          })}\n        />\n        {props.children}\n      </label>\n    );\n  }\n);\nCheckbox.displayName = 'Checkbox';\n","import * as React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './radio.module.scss';\n\nexport type RadioProps = {\n  label?: string;\n  featureColor?: [red: number, green: number, blue: number];\n} & React.HTMLProps<HTMLElement>;\n\nexport const Radio = React.forwardRef<any, RadioProps>(\n  ({ children, label, className, featureColor, ...props }, ref) => {\n    const customStyle =\n      featureColor &&\n      ({\n        '--control-indicator-color': featureColor.join(', '),\n      } as React.CSSProperties);\n    return (\n      <label style={customStyle} className={styles.root}>\n        {label}\n        {children}\n        <input\n          {...props}\n          ref={ref}\n          aria-label={\n            props['aria-label'] ||\n            (!props['aria-labelledby'] ? label : undefined)\n          }\n          className={clsx(className, styles.root)}\n          type={'radio'}\n        />\n        <div className={styles.controlIndicator} />\n      </label>\n    );\n  }\n);\nRadio.displayName = 'Radio';\n","import * as React from 'react';\nimport { RadioProps } from './Radio';\n\nexport type RadioGroupProps = {\n  name: string;\n  value?: RadioProps['value'];\n  onChange?: (\n    _event: React.ChangeEvent<HTMLInputElement>,\n    _value: string\n  ) => void;\n  children?: React.ReactElement<RadioProps>[];\n} & Omit<React.HTMLProps<HTMLDivElement>, 'value' | 'onChange'>;\n\nexport const RadioGroup = React.forwardRef<any, RadioGroupProps>(\n  ({ children, className, name, value, onChange, ...props }, ref) => {\n    const onChangeInput = (\n      e: React.ChangeEvent<HTMLInputElement>,\n      p: RadioProps\n    ) => {\n      if (\n        (p.onChange?.(e) as any) !== false &&\n        !e.isDefaultPrevented() &&\n        e.target.name === name\n      ) {\n        onChange?.(e, e.target.value);\n      }\n    };\n    return (\n      <div ref={ref} role={'radiogroup'} {...props} className={className}>\n        {React.Children.map(children as any, (child: React.ReactElement) => {\n          const props: RadioProps = child.props;\n          return React.cloneElement(child, {\n            name,\n            onChange: (e: any) => onChangeInput(e, props),\n            checked: props.checked ?? props.value === value,\n          });\n        })}\n      </div>\n    );\n  }\n);\nRadioGroup.displayName = 'RadioGroup';\n","import * as React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './select.module.scss';\n\nexport type SelectProps = {} & React.HTMLProps<HTMLSelectElement>;\n\nexport const Select = React.forwardRef<any, SelectProps>(\n  ({ children, className, ...props }, ref) => (\n    <select {...props} ref={ref} className={clsx(className, styles.root)}>\n      {children}\n    </select>\n  )\n);\nSelect.displayName = 'Select';\n"],"names":["$bOkae$useControlledState","$7CUUz$usePress","$7CUUz$useFocusable","$7CUUz$mergeProps","$7CUUz$filterDOMProps","$cKEhs$useToggle","$cKEhs$useEffect","React.memo","style","className","featureColor","props","React.useRef","useToggleState","inputProps","isFocusVisible","focusProps","_jsxs","customStyle","styles","_jsx","VisuallyHidden","isSelected","isDisabled","Checkbox","React.forwardRef","children","label","root","undefined","controlIndicator","Radio","name","value","onChange","React.Children","React.cloneElement","RadioGroup","Select"],"mappings":"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"}