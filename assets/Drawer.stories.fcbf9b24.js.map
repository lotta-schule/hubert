{"version":3,"file":"Drawer.stories.fcbf9b24.js","sources":["../../node_modules/@material-ui/icons/esm/ChevronRight.js","../../src/drawer/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRight');","import * as React from 'react';\nimport { motion } from 'framer-motion';\nimport { useModal, useOverlay, usePreventScroll } from '@react-aria/overlays';\nimport { mergeProps } from '@react-aria/utils';\nimport { ChevronRight } from '@material-ui/icons';\nimport { Button } from '../button';\n\nimport styles from './Drawer.module.scss';\n\nexport interface DrawerProps {\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  onClose?(): void;\n}\n\nexport const Drawer = ({ children, isOpen, onClose }: DrawerProps) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  usePreventScroll({ isDisabled: !isOpen });\n  const { overlayProps } = useOverlay(\n    {\n      isDismissable: true,\n      isKeyboardDismissDisabled: true,\n      isOpen,\n      onClose,\n    },\n    ref\n  );\n\n  const { modalProps } = useModal({});\n\n  React.useEffect(() => {\n    if (isOpen) {\n      const handler = ({ code }: KeyboardEvent) => {\n        if (code === 'Escape') {\n          onClose?.();\n        }\n      };\n      document.addEventListener('keydown', handler);\n      return () => {\n        document.removeEventListener('keydown', handler);\n      };\n    }\n    return undefined;\n  }, [isOpen, onClose]);\n\n  const props = mergeProps(overlayProps, modalProps) as any;\n\n  return (\n    <motion.div\n      {...props}\n      className={styles.drawer}\n      ref={ref}\n      role={'presentation'}\n      initial={'closed'}\n      animate={isOpen ? 'open' : 'closed'}\n      variants={{\n        open: { opacity: 1, x: 0 },\n        closed: { opacity: 0, x: '100%' },\n      }}\n    >\n      <div className={styles.sidebar}>\n        <Button\n          aria-label={'Leiste schlieÃŸen'}\n          icon={<ChevronRight />}\n          variant={'borderless'}\n          onClick={() => onClose?.()}\n        />\n      </div>\n      <div className={styles.content}>{children}</div>\n    </motion.div>\n  );\n};\n"],"names":["React.createElement","children","isOpen","onClose","React.useRef","usePreventScroll","overlayProps","modalProps","React","code","document","undefined","mergeProps","_jsxs","props","drawer","_jsx","sidebar","content"],"mappings":"upBAEA,GAAA,GAAe,EAA4BA,EAAmB,QAAA,cAAC,OAAQ,CACrE,EAAG,gDACL,CAAC,CAAiB,6GCWX,KAAA,GAAA,CAAA,CAAgB,WAAEC,SAAUC,aAAQC,CACzC,KAAA,GAAAC,iBAAA,IAAA,EACAC,EAAAA,CAAiB,WAAA,CAAA,CAAeH,CAAAA,EAChC,KAAA,CAAM,gBAAEI,EAAAA,CACN,cAAA,GACiB,0BAAA,GACY,SAC3BJ,SACAC,EAAAA,CAAAA,EAKJ,CAAM,cAAEI,EAAAA,CAAAA,CAAAA,EAERC,EAAAA,QAAAA,UAAAA,IAAAA,CACE,GAAA,EAAA,CACE,KAAA,GAAA,CAAA,CAAiB,UAAEC,CACjB,AAAA,IAAA,UACEN,cACD,EAEHO,gBAAAA,iBAAAA,UAAAA,CAAAA,EACA,IAAA,CACEA,SAAAA,oBAAAA,UAAAA,CAAAA,CAAA,CACD,CAEIC,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAGT,KAAA,GAAAC,EAAA,EAAA,CAAA,EAEA,MAAAC,GAAA,EAAA,IAAA,MAEQC,UAAAA,EAAAA,OACcC,MAClB,KAAA,eACM,QAAA,SACG,QAAA,EAAA,OAAA,SACkB,SAAA,CACjB,KAAA,CACF,QAAA,EAAW,EAAA,CAAM,EAAjB,OAAA,CACE,QAAA,EAAW,EAAA,MAAM,CAAjB,EAFA,SAAA,CAAAC,EAAA,MAAA,CAKV,UAAA,EAAA,QAAuBC,SAAAA,EAAAA,EAAAA,CACrB,aAAA,sBACc,KAAAD,EAAA,EAAA,EAAA,EADd,QAAA,aAGW,QAAA,IAAA,kBACa,CAAA,CAJxB,CAAA,EAAAA,EAAA,MAAA,CAOF,UAAA,EAAA,QAAuBE,UAAvB,CAAA,CAAA,CApBF,CAAA,CAuBH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}