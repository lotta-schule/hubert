{"version":3,"file":"MenuButton.30163643.js","sources":["../../node_modules/@react-stately/selection/dist/module.js","../../node_modules/@react-stately/collections/dist/module.js","../../node_modules/@react-stately/menu/dist/module.js","../../node_modules/@react-aria/selection/dist/module.js","../../node_modules/@react-aria/menu/dist/module.js","../../src/popover/new/Popover.tsx","../../node_modules/@react-stately/tree/dist/module.js","../../src/menu/MenuItem.tsx","../../src/menu/Menu.tsx","../../src/menu/MenuButton.tsx"],"sourcesContent":["import {useRef as $Qsto2$useRef, useState as $Qsto2$useState, useMemo as $Qsto2$useMemo, useEffect as $Qsto2$useEffect} from \"react\";\nimport {useControlledState as $Qsto2$useControlledState} from \"@react-stately/utils\";\n\n\nclass $e40ea825a81a3709$export$52baac22726c72bf extends Set {\n    constructor(keys, anchorKey, currentKey){\n        super(keys);\n        if (keys instanceof $e40ea825a81a3709$export$52baac22726c72bf) {\n            this.anchorKey = anchorKey || keys.anchorKey;\n            this.currentKey = currentKey || keys.currentKey;\n        } else {\n            this.anchorKey = anchorKey;\n            this.currentKey = currentKey;\n        }\n    }\n}\n\n\n\nfunction $7af3f5b51489e0b5$var$equalSets(setA, setB) {\n    if (setA.size !== setB.size) return false;\n    for (let item of setA){\n        if (!setB.has(item)) return false;\n    }\n    return true;\n}\nfunction $7af3f5b51489e0b5$export$253fe78d46329472(props) {\n    let { selectionMode: selectionMode = 'none' , disallowEmptySelection: disallowEmptySelection , allowDuplicateSelectionEvents: allowDuplicateSelectionEvents , selectionBehavior: selectionBehaviorProp = 'toggle' , disabledBehavior: disabledBehavior = 'all'  } = props;\n    // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n    // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n    let isFocusedRef = $Qsto2$useRef(false);\n    let [, setFocused] = $Qsto2$useState(false);\n    let focusedKeyRef = $Qsto2$useRef(null);\n    let childFocusStrategyRef = $Qsto2$useRef(null);\n    let [, setFocusedKey] = $Qsto2$useState(null);\n    let selectedKeysProp = $Qsto2$useMemo(()=>$7af3f5b51489e0b5$var$convertSelection(props.selectedKeys)\n    , [\n        props.selectedKeys\n    ]);\n    let defaultSelectedKeys = $Qsto2$useMemo(()=>$7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new $e40ea825a81a3709$export$52baac22726c72bf())\n    , [\n        props.defaultSelectedKeys\n    ]);\n    let [selectedKeys, setSelectedKeys] = $Qsto2$useControlledState(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);\n    let disabledKeysProp = $Qsto2$useMemo(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set()\n    , [\n        props.disabledKeys\n    ]);\n    let [selectionBehavior, setSelectionBehavior] = $Qsto2$useState(selectionBehaviorProp);\n    // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n    // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n    if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) setSelectionBehavior('replace');\n    // If the selectionBehavior prop changes, update the state as well.\n    let lastSelectionBehavior = $Qsto2$useRef(selectionBehaviorProp);\n    $Qsto2$useEffect(()=>{\n        if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n            setSelectionBehavior(selectionBehaviorProp);\n            lastSelectionBehavior.current = selectionBehaviorProp;\n        }\n    }, [\n        selectionBehaviorProp\n    ]);\n    return {\n        selectionMode: selectionMode,\n        disallowEmptySelection: disallowEmptySelection,\n        selectionBehavior: selectionBehavior,\n        setSelectionBehavior: setSelectionBehavior,\n        get isFocused () {\n            return isFocusedRef.current;\n        },\n        setFocused (f) {\n            isFocusedRef.current = f;\n            setFocused(f);\n        },\n        get focusedKey () {\n            return focusedKeyRef.current;\n        },\n        get childFocusStrategy () {\n            return childFocusStrategyRef.current;\n        },\n        setFocusedKey (k, childFocusStrategy = 'first') {\n            focusedKeyRef.current = k;\n            childFocusStrategyRef.current = childFocusStrategy;\n            setFocusedKey(k);\n        },\n        selectedKeys: selectedKeys,\n        setSelectedKeys (keys) {\n            if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys)) setSelectedKeys(keys);\n        },\n        disabledKeys: disabledKeysProp,\n        disabledBehavior: disabledBehavior\n    };\n}\nfunction $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {\n    if (!selection) return defaultValue;\n    return selection === 'all' ? 'all' : new $e40ea825a81a3709$export$52baac22726c72bf(selection);\n}\n\n\n\nclass $d496c0a20b6e58ec$export$6c8a5aaad13c9852 {\n    /**\n   * The type of selection that is allowed in the collection.\n   */ get selectionMode() {\n        return this.state.selectionMode;\n    }\n    /**\n   * Whether the collection allows empty selection.\n   */ get disallowEmptySelection() {\n        return this.state.disallowEmptySelection;\n    }\n    /**\n   * The selection behavior for the collection.\n   */ get selectionBehavior() {\n        return this.state.selectionBehavior;\n    }\n    /**\n   * Sets the selection behavior for the collection.\n   */ setSelectionBehavior(selectionBehavior) {\n        this.state.setSelectionBehavior(selectionBehavior);\n    }\n    /**\n   * Whether the collection is currently focused.\n   */ get isFocused() {\n        return this.state.isFocused;\n    }\n    /**\n   * Sets whether the collection is focused.\n   */ setFocused(isFocused) {\n        this.state.setFocused(isFocused);\n    }\n    /**\n   * The current focused key in the collection.\n   */ get focusedKey() {\n        return this.state.focusedKey;\n    }\n    /** Whether the first or last child of the focused key should receive focus. */ get childFocusStrategy() {\n        return this.state.childFocusStrategy;\n    }\n    /**\n   * Sets the focused key.\n   */ setFocusedKey(key, childFocusStrategy) {\n        this.state.setFocusedKey(key, childFocusStrategy);\n    }\n    /**\n   * The currently selected keys in the collection.\n   */ get selectedKeys() {\n        return this.state.selectedKeys === 'all' ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;\n    }\n    /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */ get rawSelection() {\n        return this.state.selectedKeys;\n    }\n    /**\n   * Returns whether a key is selected.\n   */ isSelected(key) {\n        if (this.state.selectionMode === 'none') return false;\n        key = this.getKey(key);\n        return this.state.selectedKeys === 'all' ? this.canSelectItem(key) : this.state.selectedKeys.has(key);\n    }\n    /**\n   * Whether the selection is empty.\n   */ get isEmpty() {\n        return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n    }\n    /**\n   * Whether all items in the collection are selected.\n   */ get isSelectAll() {\n        if (this.isEmpty) return false;\n        if (this.state.selectedKeys === 'all') return true;\n        if (this._isSelectAll != null) return this._isSelectAll;\n        let allKeys = this.getSelectAllKeys();\n        let selectedKeys = this.state.selectedKeys;\n        this._isSelectAll = allKeys.every((k)=>selectedKeys.has(k)\n        );\n        return this._isSelectAll;\n    }\n    get firstSelectedKey() {\n        let first = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!first || (item === null || item === void 0 ? void 0 : item.index) < first.index) first = item;\n        }\n        return first === null || first === void 0 ? void 0 : first.key;\n    }\n    get lastSelectedKey() {\n        let last = null;\n        for (let key of this.state.selectedKeys){\n            let item = this.collection.getItem(key);\n            if (!last || (item === null || item === void 0 ? void 0 : item.index) > last.index) last = item;\n        }\n        return last === null || last === void 0 ? void 0 : last.key;\n    }\n    get disabledKeys() {\n        return this.state.disabledKeys;\n    }\n    get disabledBehavior() {\n        return this.state.disabledBehavior;\n    }\n    /**\n   * Extends the selection to the given key.\n   */ extendSelection(toKey) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single') {\n            this.replaceSelection(toKey);\n            return;\n        }\n        toKey = this.getKey(toKey);\n        let selection;\n        // Only select the one key if coming from a select all.\n        if (this.state.selectedKeys === 'all') selection = new $e40ea825a81a3709$export$52baac22726c72bf([\n            toKey\n        ], toKey, toKey);\n        else {\n            let selectedKeys = this.state.selectedKeys;\n            let anchorKey = selectedKeys.anchorKey || toKey;\n            selection = new $e40ea825a81a3709$export$52baac22726c72bf(selectedKeys, anchorKey, toKey);\n            for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))selection.delete(key);\n            for (let key1 of this.getKeyRange(toKey, anchorKey))if (this.canSelectItem(key1)) selection.add(key1);\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getKeyRange(from, to) {\n        let fromItem = this.collection.getItem(from);\n        let toItem = this.collection.getItem(to);\n        if (fromItem && toItem) {\n            if (fromItem.index <= toItem.index) return this.getKeyRangeInternal(from, to);\n            return this.getKeyRangeInternal(to, from);\n        }\n        return [];\n    }\n    getKeyRangeInternal(from, to) {\n        let keys = [];\n        let key = from;\n        while(key){\n            let item = this.collection.getItem(key);\n            if (item && item.type === 'item' || item.type === 'cell' && this.allowsCellSelection) keys.push(key);\n            if (key === to) return keys;\n            key = this.collection.getKeyAfter(key);\n        }\n        return [];\n    }\n    getKey(key) {\n        let item = this.collection.getItem(key);\n        if (!item) // ¯\\_(ツ)_/¯\n        return key;\n        // If cell selection is allowed, just return the key.\n        if (item.type === 'cell' && this.allowsCellSelection) return key;\n        // Find a parent item to select\n        while(item.type !== 'item' && item.parentKey != null)item = this.collection.getItem(item.parentKey);\n        if (!item || item.type !== 'item') return null;\n        return item.key;\n    }\n    /**\n   * Toggles whether the given key is selected.\n   */ toggleSelection(key) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single' && !this.isSelected(key)) {\n            this.replaceSelection(key);\n            return;\n        }\n        key = this.getKey(key);\n        if (key == null) return;\n        let keys = new $e40ea825a81a3709$export$52baac22726c72bf(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n        if (keys.has(key)) keys.delete(key);\n        else if (this.canSelectItem(key)) {\n            keys.add(key);\n            keys.anchorKey = key;\n            keys.currentKey = key;\n        }\n        if (this.disallowEmptySelection && keys.size === 0) return;\n        this.state.setSelectedKeys(keys);\n    }\n    /**\n   * Replaces the selection with only the given key.\n   */ replaceSelection(key) {\n        if (this.selectionMode === 'none') return;\n        key = this.getKey(key);\n        if (key == null) return;\n        let selection = this.canSelectItem(key) ? new $e40ea825a81a3709$export$52baac22726c72bf([\n            key\n        ], key, key) : new $e40ea825a81a3709$export$52baac22726c72bf();\n        this.state.setSelectedKeys(selection);\n    }\n    /**\n   * Replaces the selection with the given keys.\n   */ setSelectedKeys(keys) {\n        if (this.selectionMode === 'none') return;\n        let selection = new $e40ea825a81a3709$export$52baac22726c72bf();\n        for (let key of keys){\n            key = this.getKey(key);\n            if (key != null) {\n                selection.add(key);\n                if (this.selectionMode === 'single') break;\n            }\n        }\n        this.state.setSelectedKeys(selection);\n    }\n    getSelectAllKeys() {\n        let keys = [];\n        let addKeys = (key)=>{\n            while(key){\n                if (this.canSelectItem(key)) {\n                    let item = this.collection.getItem(key);\n                    if (item.type === 'item') keys.push(key);\n                    // Add child keys. If cell selection is allowed, then include item children too.\n                    if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) addKeys([\n                        ...item.childNodes\n                    ][0].key);\n                }\n                key = this.collection.getKeyAfter(key);\n            }\n        };\n        addKeys(this.collection.getFirstKey());\n        return keys;\n    }\n    /**\n   * Selects all items in the collection.\n   */ selectAll() {\n        if (this.selectionMode === 'multiple') this.state.setSelectedKeys('all');\n    }\n    /**\n   * Removes all keys from the selection.\n   */ clearSelection() {\n        if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) this.state.setSelectedKeys(new $e40ea825a81a3709$export$52baac22726c72bf());\n    }\n    /**\n   * Toggles between select all and an empty selection.\n   */ toggleSelectAll() {\n        if (this.isSelectAll) this.clearSelection();\n        else this.selectAll();\n    }\n    select(key, e) {\n        if (this.selectionMode === 'none') return;\n        if (this.selectionMode === 'single') {\n            if (this.isSelected(key) && !this.disallowEmptySelection) this.toggleSelection(key);\n            else this.replaceSelection(key);\n        } else if (this.selectionBehavior === 'toggle' || e && (e.pointerType === 'touch' || e.pointerType === 'virtual')) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        this.toggleSelection(key);\n        else this.replaceSelection(key);\n    }\n    /**\n   * Returns whether the current selection is equal to the given selection.\n   */ isSelectionEqual(selection) {\n        if (selection === this.state.selectedKeys) return true;\n        // Check if the set of keys match.\n        let selectedKeys = this.selectedKeys;\n        if (selection.size !== selectedKeys.size) return false;\n        for (let key of selection){\n            if (!selectedKeys.has(key)) return false;\n        }\n        for (let key2 of selectedKeys){\n            if (!selection.has(key2)) return false;\n        }\n        return true;\n    }\n    canSelectItem(key) {\n        if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) return false;\n        let item = this.collection.getItem(key);\n        if (!item || item.type === 'cell' && !this.allowsCellSelection) return false;\n        return true;\n    }\n    isDisabled(key) {\n        return this.state.disabledKeys.has(key) && this.state.disabledBehavior === 'all';\n    }\n    constructor(collection, state, options){\n        this.collection = collection;\n        this.state = state;\n        var ref;\n        this.allowsCellSelection = (ref = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && ref !== void 0 ? ref : false;\n        this._isSelectAll = null;\n    }\n}\n\n\n\n\nexport {$7af3f5b51489e0b5$export$253fe78d46329472 as useMultipleSelectionState, $d496c0a20b6e58ec$export$6c8a5aaad13c9852 as SelectionManager};\n//# sourceMappingURL=module.js.map\n","import $tyW6A$react, {useMemo as $tyW6A$useMemo, useRef as $tyW6A$useRef} from \"react\";\n\n\nfunction $c1d7fb2ec91bae71$var$Item(props) {\n    return null;\n}\n$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n    let { childItems: childItems , title: title , children: children  } = props;\n    let rendered = props.title || props.children;\n    let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n    // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n    if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning)) console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n    yield {\n        type: 'item',\n        props: props,\n        rendered: rendered,\n        textValue: textValue,\n        'aria-label': props['aria-label'],\n        hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),\n        *childNodes () {\n            if (childItems) for (let child1 of childItems)yield {\n                type: 'item',\n                value: child1\n            };\n            else if (title) {\n                let items = [];\n                $tyW6A$react.Children.forEach(children, (child)=>{\n                    items.push({\n                        type: 'item',\n                        element: child\n                    });\n                });\n                yield* items;\n            }\n        }\n    };\n};\nfunction $c1d7fb2ec91bae71$var$hasChildItems(props) {\n    if (props.hasChildItems != null) return props.hasChildItems;\n    if (props.childItems) return true;\n    if (props.title && $tyW6A$react.Children.count(props.children) > 0) return true;\n    return false;\n}\n// We don't want getCollectionNode to show up in the type definition\nlet $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item;\n\n\n\nfunction $9fc4852771d079eb$var$Section(props) {\n    return null;\n}\n$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode(props) {\n    let { children: children , title: title , items: items1  } = props;\n    yield {\n        type: 'section',\n        hasChildNodes: true,\n        rendered: title,\n        'aria-label': props['aria-label'],\n        *childNodes () {\n            if (typeof children === 'function') {\n                if (!items1) throw new Error('props.children was a function but props.items is missing');\n                for (let item of items1)yield {\n                    type: 'item',\n                    value: item,\n                    renderer: children\n                };\n            } else {\n                let items = [];\n                $tyW6A$react.Children.forEach(children, (child)=>{\n                    items.push({\n                        type: 'item',\n                        element: child\n                    });\n                });\n                yield* items;\n            }\n        }\n    };\n};\n// We don't want getCollectionNode to show up in the type definition\nlet $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section;\n\n\n\nclass $eb2240fc39a57fa5$export$bf788dd355e3a401 {\n    build(props, context) {\n        this.context = context;\n        return $eb2240fc39a57fa5$var$iterable(()=>this.iterateCollection(props)\n        );\n    }\n    *iterateCollection(props) {\n        let { children: children , items: items  } = props;\n        if (typeof children === 'function') {\n            if (!items) throw new Error('props.children was a function but props.items is missing');\n            for (let item of props.items)yield* this.getFullNode({\n                value: item\n            }, {\n                renderer: children\n            });\n        } else {\n            let items = [];\n            $tyW6A$react.Children.forEach(children, (child)=>{\n                items.push(child);\n            });\n            let index = 0;\n            for (let item of items){\n                let nodes = this.getFullNode({\n                    element: item,\n                    index: index\n                }, {\n                });\n                for (let node of nodes){\n                    index++;\n                    yield node;\n                }\n            }\n        }\n    }\n    getKey(item, partialNode, state, parentKey) {\n        if (item.key != null) return item.key;\n        if (partialNode.type === 'cell' && partialNode.key != null) return `${parentKey}${partialNode.key}`;\n        let v = partialNode.value;\n        if (v != null) {\n            var _key;\n            let key = (_key = v.key) !== null && _key !== void 0 ? _key : v.id;\n            if (key == null) throw new Error('No key found for item');\n            return key;\n        }\n        return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;\n    }\n    getChildState(state, partialNode) {\n        return {\n            renderer: partialNode.renderer || state.renderer\n        };\n    }\n    *getFullNode(partialNode, state, parentKey, parentNode) {\n        // If there's a value instead of an element on the node, and a parent renderer function is available,\n        // use it to render an element for the value.\n        let element = partialNode.element;\n        if (!element && partialNode.value && state && state.renderer) {\n            let cached = this.cache.get(partialNode.value);\n            if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {\n                cached.index = partialNode.index;\n                cached.parentKey = parentNode ? parentNode.key : null;\n                yield cached;\n                return;\n            }\n            element = state.renderer(partialNode.value);\n        }\n        // If there's an element with a getCollectionNode function on its type, then it's a supported component.\n        // Call this function to get a partial node, and recursively build a full node from there.\n        if ($tyW6A$react.isValidElement(element)) {\n            let type = element.type;\n            if (typeof type !== 'function' && typeof type.getCollectionNode !== 'function') {\n                let name = typeof element.type === 'function' ? element.type.name : element.type;\n                throw new Error(`Unknown element <${name}> in collection.`);\n            }\n            let childNodes = type.getCollectionNode(element.props, this.context);\n            let index = partialNode.index;\n            let result = childNodes.next();\n            while(!result.done && result.value){\n                let childNode = result.value;\n                partialNode.index = index;\n                let nodeKey = childNode.key;\n                if (!nodeKey) nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);\n                let nodes = this.getFullNode({\n                    ...childNode,\n                    key: nodeKey,\n                    index: index,\n                    wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)\n                }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);\n                let children = [\n                    ...nodes\n                ];\n                for (let node of children){\n                    // Cache the node based on its value\n                    node.value = childNode.value || partialNode.value;\n                    if (node.value) this.cache.set(node.value, node);\n                    // The partial node may have specified a type for the child in order to specify a constraint.\n                    // Verify that the full node that was built recursively matches this type.\n                    if (partialNode.type && node.type !== partialNode.type) throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);\n                    index++;\n                    yield node;\n                }\n                result = childNodes.next(children);\n            }\n            return;\n        }\n        // Ignore invalid elements\n        if (partialNode.key == null) return;\n        // Create full node\n        let builder = this;\n        let node = {\n            type: partialNode.type,\n            props: partialNode.props,\n            key: partialNode.key,\n            parentKey: parentNode ? parentNode.key : null,\n            value: partialNode.value,\n            level: parentNode ? parentNode.level + 1 : 0,\n            index: partialNode.index,\n            rendered: partialNode.rendered,\n            textValue: partialNode.textValue,\n            'aria-label': partialNode['aria-label'],\n            wrapper: partialNode.wrapper,\n            shouldInvalidate: partialNode.shouldInvalidate,\n            hasChildNodes: partialNode.hasChildNodes,\n            childNodes: $eb2240fc39a57fa5$var$iterable(function*() {\n                if (!partialNode.hasChildNodes) return;\n                let index = 0;\n                for (let child of partialNode.childNodes()){\n                    // Ensure child keys are globally unique by prepending the parent node's key\n                    if (child.key != null) // TODO: Remove this line entirely and enforce that users always provide unique keys.\n                    // Currently this line will have issues when a parent has a key `a` and a child with key `bc`\n                    // but another parent has key `ab` and its child has a key `c`. The combined keys would result in both\n                    // children having a key of `abc`.\n                    child.key = `${node.key}${child.key}`;\n                    child.index = index;\n                    let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);\n                    for (let node1 of nodes){\n                        index++;\n                        yield node1;\n                    }\n                }\n            })\n        };\n        yield node;\n    }\n    constructor(){\n        this.cache = new WeakMap();\n    }\n}\n// Wraps an iterator function as an iterable object, and caches the results.\nfunction $eb2240fc39a57fa5$var$iterable(iterator) {\n    let cache = [];\n    let iterable = null;\n    return {\n        *[Symbol.iterator] () {\n            for (let item of cache)yield item;\n            if (!iterable) iterable = iterator();\n            for (let item1 of iterable){\n                cache.push(item1);\n                yield item1;\n            }\n        }\n    };\n}\nfunction $eb2240fc39a57fa5$var$compose(outer, inner) {\n    if (outer && inner) return (element)=>outer(inner(element))\n    ;\n    if (outer) return outer;\n    if (inner) return inner;\n}\nfunction $eb2240fc39a57fa5$var$capitalize(str) {\n    return str[0].toUpperCase() + str.slice(1);\n}\n\n\n\nfunction $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context, invalidators = []) {\n    let builder = $tyW6A$useMemo(()=>new $eb2240fc39a57fa5$export$bf788dd355e3a401()\n    , []);\n    let prev = $tyW6A$useRef(null);\n    return $tyW6A$useMemo(()=>{\n        let nodes = builder.build(props, context);\n        prev.current = factory(nodes, prev.current);\n        return prev.current;\n    // Don't invalidate when any prop changes, just the two we care about.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        builder,\n        props.children,\n        props.items,\n        context,\n        ...invalidators\n    ]);\n}\n\n\nconst $453cc9f0df89c0a5$var$cache = new WeakMap();\nfunction $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {\n    let count = $453cc9f0df89c0a5$var$cache.get(collection);\n    if (count != null) return count;\n    count = 0;\n    for (let item of collection)if (item.type === 'section') count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);\n    else count++;\n    $453cc9f0df89c0a5$var$cache.set(collection, count);\n    return count;\n}\n\n\n\n\nexport {$c1d7fb2ec91bae71$export$6d08773d2e66f8f2 as Item, $9fc4852771d079eb$export$6e2c8f0811a474ce as Section, $7613b1592d41b092$export$6cd28814d92fa9c9 as useCollection, $453cc9f0df89c0a5$export$77d5aafae4e095b2 as getItemCount};\n//# sourceMappingURL=module.js.map\n","import {useOverlayTriggerState as $9Xvoh$useOverlayTriggerState} from \"@react-stately/overlays\";\nimport {useState as $9Xvoh$useState} from \"react\";\n\n\n\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n    let overlayTriggerState = $9Xvoh$useOverlayTriggerState(props);\n    let [focusStrategy1, setFocusStrategy] = $9Xvoh$useState(null);\n    return {\n        focusStrategy: focusStrategy1,\n        ...overlayTriggerState,\n        open (focusStrategy = null) {\n            setFocusStrategy(focusStrategy);\n            overlayTriggerState.open();\n        },\n        toggle (focusStrategy = null) {\n            setFocusStrategy(focusStrategy);\n            overlayTriggerState.toggle();\n        }\n    };\n}\n\n\n\n\nexport {$a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState};\n//# sourceMappingURL=module.js.map\n","import {useRef as $eCAIO$useRef, useEffect as $eCAIO$useEffect, useMemo as $eCAIO$useMemo} from \"react\";\nimport {getFocusableTreeWalker as $eCAIO$getFocusableTreeWalker, focusSafely as $eCAIO$focusSafely} from \"@react-aria/focus\";\nimport {focusWithoutScrolling as $eCAIO$focusWithoutScrolling, useEvent as $eCAIO$useEvent, scrollIntoView as $eCAIO$scrollIntoView, mergeProps as $eCAIO$mergeProps, isAppleDevice as $eCAIO$isAppleDevice, isMac as $eCAIO$isMac} from \"@react-aria/utils\";\nimport {useLocale as $eCAIO$useLocale, useCollator as $eCAIO$useCollator} from \"@react-aria/i18n\";\nimport {usePress as $eCAIO$usePress, useLongPress as $eCAIO$useLongPress} from \"@react-aria/interactions\";\n\n\n\n\n\n\nfunction $feb5ffebff200149$export$d3e3bd3e26688c04(e) {\n    // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n    // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n    return $eCAIO$isAppleDevice() ? e.altKey : e.ctrlKey;\n}\nfunction $feb5ffebff200149$export$16792effe837dba3(e) {\n    if ($eCAIO$isMac()) return e.metaKey;\n    return e.ctrlKey;\n}\n\n\n\n\nfunction $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {\n    let { keyboardDelegate: keyboardDelegate , selectionManager: selectionManager , onTypeSelect: onTypeSelect  } = options;\n    let state = $eCAIO$useRef({\n        search: '',\n        timeout: null\n    }).current;\n    let onKeyDown = (e)=>{\n        let character = $fb3050f43d946246$var$getStringForKey(e.key);\n        if (!character || e.ctrlKey || e.metaKey) return;\n        // Do not propagate the Spacebar event if it's meant to be part of the search.\n        // When we time out, the search term becomes empty, hence the check on length.\n        // Trimming is to account for the case of pressing the Spacebar more than once,\n        // which should cycle through the selection/deselection of the focused item.\n        if (character === ' ' && state.search.trim().length > 0) {\n            e.preventDefault();\n            if (!('continuePropagation' in e)) e.stopPropagation();\n        }\n        state.search += character;\n        // Use the delegate to find a key to focus.\n        // Prioritize items after the currently focused item, falling back to searching the whole list.\n        let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n        // If no key found, search from the top.\n        if (key == null) key = keyboardDelegate.getKeyForSearch(state.search);\n        if (key != null) {\n            selectionManager.setFocusedKey(key);\n            if (onTypeSelect) onTypeSelect(key);\n        }\n        clearTimeout(state.timeout);\n        state.timeout = setTimeout(()=>{\n            state.search = '';\n        }, 500);\n    };\n    return {\n        typeSelectProps: {\n            // Using a capturing listener to catch the keydown event before\n            // other hooks in order to handle the Spacebar event.\n            onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n        }\n    };\n}\nfunction $fb3050f43d946246$var$getStringForKey(key) {\n    // If the key is of length 1, it is an ASCII value.\n    // Otherwise, if there are no ASCII characters in the key name,\n    // it is a Unicode character.\n    // See https://www.w3.org/TR/uievents-key/\n    if (key.length === 1 || !/^[A-Z]/i.test(key)) return key;\n    return '';\n}\n\n\nfunction $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {\n    let { selectionManager: manager , keyboardDelegate: delegate , ref: ref , autoFocus: autoFocus = false , shouldFocusWrap: shouldFocusWrap = false , disallowEmptySelection: disallowEmptySelection = false , disallowSelectAll: disallowSelectAll = false , selectOnFocus: selectOnFocus = manager.selectionBehavior === 'replace' , disallowTypeAhead: disallowTypeAhead = false , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation = false , isVirtualized: isVirtualized , scrollRef: // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref  } = options;\n    let { direction: direction  } = $eCAIO$useLocale();\n    let onKeyDown = (e)=>{\n        // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n        if (e.altKey && e.key === 'Tab') e.preventDefault();\n        // Keyboard events bubble through portals. Don't handle keyboard events\n        // for elements outside the collection (e.g. menus).\n        if (!ref.current.contains(e.target)) return;\n        const navigateToKey = (key, childFocus)=>{\n            if (key != null) {\n                manager.setFocusedKey(key, childFocus);\n                if (e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(key);\n                else if (selectOnFocus && !$feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.replaceSelection(key);\n            }\n        };\n        switch(e.key){\n            case 'ArrowDown':\n                if (delegate.getKeyBelow) {\n                    var ref4, ref1;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (ref4 = delegate.getFirstKey) === null || ref4 === void 0 ? void 0 : ref4.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref1 = delegate.getFirstKey) === null || ref1 === void 0 ? void 0 : ref1.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowUp':\n                if (delegate.getKeyAbove) {\n                    var ref2, ref3;\n                    e.preventDefault();\n                    let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (ref2 = delegate.getLastKey) === null || ref2 === void 0 ? void 0 : ref2.call(delegate);\n                    if (nextKey == null && shouldFocusWrap) nextKey = (ref3 = delegate.getLastKey) === null || ref3 === void 0 ? void 0 : ref3.call(delegate, manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'ArrowLeft':\n                if (delegate.getKeyLeftOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n                }\n                break;\n            case 'ArrowRight':\n                if (delegate.getKeyRightOf) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n                    navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n                }\n                break;\n            case 'Home':\n                if (delegate.getFirstKey) {\n                    e.preventDefault();\n                    let firstKey = delegate.getFirstKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));\n                    manager.setFocusedKey(firstKey);\n                    if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(firstKey);\n                    else if (selectOnFocus) manager.replaceSelection(firstKey);\n                }\n                break;\n            case 'End':\n                if (delegate.getLastKey) {\n                    e.preventDefault();\n                    let lastKey = delegate.getLastKey(manager.focusedKey, $feb5ffebff200149$export$16792effe837dba3(e));\n                    manager.setFocusedKey(lastKey);\n                    if ($feb5ffebff200149$export$16792effe837dba3(e) && e.shiftKey && manager.selectionMode === 'multiple') manager.extendSelection(lastKey);\n                    else if (selectOnFocus) manager.replaceSelection(lastKey);\n                }\n                break;\n            case 'PageDown':\n                if (delegate.getKeyPageBelow) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'PageUp':\n                if (delegate.getKeyPageAbove) {\n                    e.preventDefault();\n                    let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n                    navigateToKey(nextKey);\n                }\n                break;\n            case 'a':\n                if ($feb5ffebff200149$export$16792effe837dba3(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n                    e.preventDefault();\n                    manager.selectAll();\n                }\n                break;\n            case 'Escape':\n                e.preventDefault();\n                if (!disallowEmptySelection) manager.clearSelection();\n                break;\n            case 'Tab':\n                if (!allowsTabNavigation) {\n                    // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n                    // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n                    // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n                    // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n                    // in the collection, so that the browser default behavior will apply starting from that element\n                    // rather than the currently focused one.\n                    if (e.shiftKey) ref.current.focus();\n                    else {\n                        let walker = $eCAIO$getFocusableTreeWalker(ref.current, {\n                            tabbable: true\n                        });\n                        let next;\n                        let last;\n                        do {\n                            last = walker.lastChild();\n                            if (last) next = last;\n                        }while (last)\n                        if (next && !next.contains(document.activeElement)) $eCAIO$focusWithoutScrolling(next);\n                    }\n                    break;\n                }\n        }\n    };\n    // Store the scroll position so we can restore it later.\n    let scrollPos = $eCAIO$useRef({\n        top: 0,\n        left: 0\n    });\n    $eCAIO$useEvent(scrollRef, 'scroll', isVirtualized ? null : ()=>{\n        scrollPos.current = {\n            top: scrollRef.current.scrollTop,\n            left: scrollRef.current.scrollLeft\n        };\n    });\n    let onFocus = (e)=>{\n        if (manager.isFocused) {\n            // If a focus event bubbled through a portal, reset focus state.\n            if (!e.currentTarget.contains(e.target)) manager.setFocused(false);\n            return;\n        }\n        // Focus events can bubble through portals. Ignore these events.\n        if (!e.currentTarget.contains(e.target)) return;\n        manager.setFocused(true);\n        if (manager.focusedKey == null) {\n            let navigateToFirstKey = (key)=>{\n                if (key != null) {\n                    manager.setFocusedKey(key);\n                    if (selectOnFocus) manager.replaceSelection(key);\n                }\n            };\n            // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n            // Attempt to detect whether the user is tabbing forward or backward into the collection\n            // and either focus the first or last item accordingly.\n            let relatedTarget = e.relatedTarget;\n            var _lastSelectedKey, _firstSelectedKey;\n            if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING) navigateToFirstKey((_lastSelectedKey = manager.lastSelectedKey) !== null && _lastSelectedKey !== void 0 ? _lastSelectedKey : delegate.getLastKey());\n            else navigateToFirstKey((_firstSelectedKey = manager.firstSelectedKey) !== null && _firstSelectedKey !== void 0 ? _firstSelectedKey : delegate.getFirstKey());\n        } else if (!isVirtualized) {\n            // Restore the scroll position to what it was before.\n            scrollRef.current.scrollTop = scrollPos.current.top;\n            scrollRef.current.scrollLeft = scrollPos.current.left;\n            // Refocus and scroll the focused item into view if it exists within the scrollable region.\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) {\n                // This prevents a flash of focus on the first/last element in the collection\n                $eCAIO$focusWithoutScrolling(element);\n                $eCAIO$scrollIntoView(scrollRef.current, element);\n            }\n        }\n    };\n    let onBlur = (e)=>{\n        // Don't set blurred and then focused again if moving focus within the collection.\n        if (!e.currentTarget.contains(e.relatedTarget)) manager.setFocused(false);\n    };\n    const autoFocusRef = $eCAIO$useRef(autoFocus);\n    $eCAIO$useEffect(()=>{\n        if (autoFocusRef.current) {\n            let focusedKey = null;\n            // Check focus strategy to determine which item to focus\n            if (autoFocus === 'first') focusedKey = delegate.getFirstKey();\n            if (autoFocus === 'last') focusedKey = delegate.getLastKey();\n            // If there are any selected keys, make the first one the new focus target\n            let selectedKeys = manager.selectedKeys;\n            if (selectedKeys.size) focusedKey = selectedKeys.values().next().value;\n            manager.setFocused(true);\n            manager.setFocusedKey(focusedKey);\n            // If no default focus key is selected, focus the collection itself.\n            if (focusedKey == null && !shouldUseVirtualFocus) $eCAIO$focusSafely(ref.current);\n        }\n        autoFocusRef.current = false;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    // If not virtualized, scroll the focused element into view when the focusedKey changes.\n    // When virtualized, Virtualizer handles this internally.\n    $eCAIO$useEffect(()=>{\n        if (!isVirtualized && manager.focusedKey && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {\n            let element = scrollRef.current.querySelector(`[data-key=\"${manager.focusedKey}\"]`);\n            if (element) $eCAIO$scrollIntoView(scrollRef.current, element);\n        }\n    }, [\n        isVirtualized,\n        scrollRef,\n        manager.focusedKey\n    ]);\n    let handlers = {\n        onKeyDown: onKeyDown,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onMouseDown (e) {\n            // Ignore events that bubbled through portals.\n            if (e.currentTarget.contains(e.target)) // Prevent focus going to the collection when clicking on the scrollbar.\n            e.preventDefault();\n        }\n    };\n    let { typeSelectProps: typeSelectProps  } = $fb3050f43d946246$export$e32c88dfddc6e1d8({\n        keyboardDelegate: delegate,\n        selectionManager: manager\n    });\n    if (!disallowTypeAhead) handlers = $eCAIO$mergeProps(typeSelectProps, handlers);\n    // If nothing is focused within the collection, make the collection itself tabbable.\n    // This will be marshalled to either the first or last item depending on where focus came from.\n    // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n    // to move real DOM focus to the element anyway.\n    let tabIndex;\n    if (!shouldUseVirtualFocus) tabIndex = manager.focusedKey == null ? 0 : -1;\n    return {\n        collectionProps: {\n            ...handlers,\n            tabIndex: tabIndex\n        }\n    };\n}\n\n\n\n\n\n\n\nfunction $880e95eb8b93ba9a$export$ecf600387e221c37(options) {\n    let { selectionManager: manager , key: key , ref: ref , shouldSelectOnPressUp: shouldSelectOnPressUp , isVirtualized: isVirtualized , shouldUseVirtualFocus: shouldUseVirtualFocus , focus: focus , isDisabled: isDisabled , onAction: onAction , allowsDifferentPressOrigin: allowsDifferentPressOrigin  } = options;\n    let onSelect = (e)=>{\n        if (e.pointerType === 'keyboard' && $feb5ffebff200149$export$d3e3bd3e26688c04(e)) manager.toggleSelection(key);\n        else {\n            if (manager.selectionMode === 'none') return;\n            if (manager.selectionMode === 'single') {\n                if (manager.isSelected(key) && !manager.disallowEmptySelection) manager.toggleSelection(key);\n                else manager.replaceSelection(key);\n            } else if (e && e.shiftKey) manager.extendSelection(key);\n            else if (manager.selectionBehavior === 'toggle' || e && ($feb5ffebff200149$export$16792effe837dba3(e) || e.pointerType === 'touch' || e.pointerType === 'virtual')) // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n            manager.toggleSelection(key);\n            else manager.replaceSelection(key);\n        }\n    };\n    // Focus the associated DOM node when this item becomes the focusedKey\n    $eCAIO$useEffect(()=>{\n        let isFocused = key === manager.focusedKey;\n        if (isFocused && manager.isFocused && !shouldUseVirtualFocus && document.activeElement !== ref.current) {\n            if (focus) focus();\n            else $eCAIO$focusSafely(ref.current);\n        }\n    }, [\n        ref,\n        key,\n        manager.focusedKey,\n        manager.childFocusStrategy,\n        manager.isFocused,\n        shouldUseVirtualFocus\n    ]);\n    // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n    // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n    // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n    let itemProps = {\n    };\n    if (!shouldUseVirtualFocus) itemProps = {\n        tabIndex: key === manager.focusedKey ? 0 : -1,\n        onFocus (e) {\n            if (e.target === ref.current) manager.setFocusedKey(key);\n        }\n    };\n    // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n    // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n    // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n    // With touch, onAction occurs on single tap, and long press enters selection mode.\n    isDisabled = isDisabled || manager.isDisabled(key);\n    let allowsSelection = !isDisabled && manager.canSelectItem(key);\n    let allowsActions = onAction && !isDisabled;\n    let hasPrimaryAction = allowsActions && (manager.selectionBehavior === 'replace' ? !allowsSelection : manager.isEmpty);\n    let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n    let hasAction = hasPrimaryAction || hasSecondaryAction;\n    let modality = $eCAIO$useRef(null);\n    let longPressEnabled = hasAction && allowsSelection;\n    let longPressEnabledOnPressStart = $eCAIO$useRef(false);\n    let hadPrimaryActionOnPressStart = $eCAIO$useRef(false);\n    // By default, selection occurs on pointer down. This can be strange if selecting an\n    // item causes the UI to disappear immediately (e.g. menus).\n    // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n    // onPress requires a pointer down event on the same element as pointer up. For menus,\n    // we want to be able to have the pointer down on the trigger that opens the menu and\n    // the pointer up on the menu item rather than requiring a separate press.\n    // For keyboard events, selection still occurs on key down.\n    let itemPressProps = {\n    };\n    if (shouldSelectOnPressUp) {\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            longPressEnabledOnPressStart.current = longPressEnabled;\n            if (e.pointerType === 'keyboard' && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);\n        };\n        // If allowsDifferentPressOrigin, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n        // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n        if (!allowsDifferentPressOrigin) itemPressProps.onPress = (e)=>{\n            if (hasPrimaryAction || hasSecondaryAction && e.pointerType !== 'mouse') {\n                if (e.pointerType === 'keyboard' && !$880e95eb8b93ba9a$var$isActionKey()) return;\n                onAction();\n            } else if (e.pointerType !== 'keyboard') onSelect(e);\n        };\n        else {\n            itemPressProps.onPressUp = (e)=>{\n                if (e.pointerType !== 'keyboard') onSelect(e);\n            };\n            itemPressProps.onPress = hasPrimaryAction ? ()=>onAction()\n             : null;\n        }\n    } else {\n        itemPressProps.onPressStart = (e)=>{\n            modality.current = e.pointerType;\n            longPressEnabledOnPressStart.current = longPressEnabled;\n            hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n            // Select on mouse down unless there is a primary action which will occur on mouse up.\n            // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n            // and the Enter key performs onAction on key up.\n            if (e.pointerType === 'mouse' && !hasPrimaryAction || e.pointerType === 'keyboard' && (!onAction || $880e95eb8b93ba9a$var$isSelectionKey())) onSelect(e);\n        };\n        itemPressProps.onPress = (e)=>{\n            // Selection occurs on touch up. Primary actions always occur on pointer up.\n            // Both primary and secondary actions occur on Enter key up. The only exception\n            // is secondary actions, which occur on double click with a mouse.\n            if (e.pointerType === 'touch' || e.pointerType === 'pen' || e.pointerType === 'virtual' || e.pointerType === 'keyboard' && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current) {\n                if (hasAction) onAction();\n                else onSelect(e);\n            }\n        };\n    }\n    if (!isVirtualized) itemProps['data-key'] = key;\n    itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n    let { pressProps: pressProps , isPressed: isPressed  } = $eCAIO$usePress(itemPressProps);\n    // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n    let onDoubleClick = hasSecondaryAction ? (e)=>{\n        if (modality.current === 'mouse') {\n            e.stopPropagation();\n            e.preventDefault();\n            onAction();\n        }\n    } : undefined;\n    // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n    // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n    // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n    let { longPressProps: longPressProps  } = $eCAIO$useLongPress({\n        isDisabled: !longPressEnabled,\n        onLongPress (e) {\n            if (e.pointerType === 'touch') {\n                onSelect(e);\n                manager.setSelectionBehavior('toggle');\n            }\n        }\n    });\n    // Prevent native drag and drop on long press if we also select on long press.\n    // Once the user is in selection mode, they can long press again to drag.\n    let onDragStart = (e)=>{\n        if (modality.current === 'touch' && longPressEnabledOnPressStart.current) e.preventDefault();\n    };\n    return {\n        itemProps: $eCAIO$mergeProps(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {\n        }, longPressEnabled ? longPressProps : {\n        }, {\n            onDoubleClick: onDoubleClick,\n            onDragStart: onDragStart\n        }),\n        isPressed: isPressed,\n        isSelected: manager.isSelected(key),\n        isDisabled: isDisabled,\n        allowsSelection: allowsSelection,\n        hasAction: hasAction\n    };\n}\nfunction $880e95eb8b93ba9a$var$isActionKey() {\n    let event = window.event;\n    return (event === null || event === void 0 ? void 0 : event.key) === 'Enter';\n}\nfunction $880e95eb8b93ba9a$var$isSelectionKey() {\n    let event = window.event;\n    return (event === null || event === void 0 ? void 0 : event.key) === ' ' || (event === null || event === void 0 ? void 0 : event.code) === 'Space';\n}\n\n\n\nclass $2a25aae57d74318e$export$a05409b8bb224a5a {\n    getKeyBelow(key) {\n        key = this.collection.getKeyAfter(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getKeyAbove(key) {\n        key = this.collection.getKeyBefore(key);\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getFirstKey() {\n        let key = this.collection.getFirstKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyAfter(key);\n        }\n    }\n    getLastKey() {\n        let key = this.collection.getLastKey();\n        while(key != null){\n            let item = this.collection.getItem(key);\n            if (item.type === 'item' && !this.disabledKeys.has(key)) return key;\n            key = this.collection.getKeyBefore(key);\n        }\n    }\n    getItem(key) {\n        return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n    }\n    getKeyPageAbove(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.max(0, item.offsetTop + item.offsetHeight - menu.offsetHeight);\n        while(item && item.offsetTop > pageY){\n            key = this.getKeyAbove(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyPageBelow(key) {\n        let menu = this.ref.current;\n        let item = this.getItem(key);\n        if (!item) return null;\n        let pageY = Math.min(menu.scrollHeight, item.offsetTop - item.offsetHeight + menu.offsetHeight);\n        while(item && item.offsetTop < pageY){\n            key = this.getKeyBelow(key);\n            item = this.getItem(key);\n        }\n        return key;\n    }\n    getKeyForSearch(search, fromKey) {\n        if (!this.collator) return null;\n        let collection = this.collection;\n        let key = fromKey || this.getFirstKey();\n        while(key != null){\n            let item = collection.getItem(key);\n            let substring = item.textValue.slice(0, search.length);\n            if (item.textValue && this.collator.compare(substring, search) === 0) return key;\n            key = this.getKeyBelow(key);\n        }\n        return null;\n    }\n    constructor(collection, disabledKeys, ref, collator){\n        this.collection = collection;\n        this.disabledKeys = disabledKeys;\n        this.ref = ref;\n        this.collator = collator;\n    }\n}\n\n\n\n\nfunction $982254629710d113$export$b95089534ab7c1fd(props) {\n    let { selectionManager: selectionManager , collection: collection , disabledKeys: disabledKeys , ref: ref , keyboardDelegate: keyboardDelegate , autoFocus: autoFocus , shouldFocusWrap: shouldFocusWrap , isVirtualized: isVirtualized , disallowEmptySelection: disallowEmptySelection , selectOnFocus: selectOnFocus = selectionManager.selectionBehavior === 'replace' , disallowTypeAhead: disallowTypeAhead , shouldUseVirtualFocus: shouldUseVirtualFocus , allowsTabNavigation: allowsTabNavigation  } = props;\n    // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n    // When virtualized, the layout object will be passed in as a prop and override this.\n    let collator = $eCAIO$useCollator({\n        usage: 'search',\n        sensitivity: 'base'\n    });\n    let delegate = $eCAIO$useMemo(()=>keyboardDelegate || new $2a25aae57d74318e$export$a05409b8bb224a5a(collection, disabledKeys, ref, collator)\n    , [\n        keyboardDelegate,\n        collection,\n        disabledKeys,\n        ref,\n        collator\n    ]);\n    let { collectionProps: collectionProps  } = $ae20dd8cbca75726$export$d6daf82dcd84e87c({\n        ref: ref,\n        selectionManager: selectionManager,\n        keyboardDelegate: delegate,\n        autoFocus: autoFocus,\n        shouldFocusWrap: shouldFocusWrap,\n        disallowEmptySelection: disallowEmptySelection,\n        selectOnFocus: selectOnFocus,\n        disallowTypeAhead: disallowTypeAhead,\n        shouldUseVirtualFocus: shouldUseVirtualFocus,\n        allowsTabNavigation: allowsTabNavigation,\n        isVirtualized: isVirtualized,\n        scrollRef: ref\n    });\n    return {\n        listProps: collectionProps\n    };\n}\n\n\n\n\n\n\nexport {$ae20dd8cbca75726$export$d6daf82dcd84e87c as useSelectableCollection, $880e95eb8b93ba9a$export$ecf600387e221c37 as useSelectableItem, $982254629710d113$export$b95089534ab7c1fd as useSelectableList, $2a25aae57d74318e$export$a05409b8bb224a5a as ListKeyboardDelegate, $fb3050f43d946246$export$e32c88dfddc6e1d8 as useTypeSelect};\n//# sourceMappingURL=module.js.map\n","import {useId as $1Hnir$useId, filterDOMProps as $1Hnir$filterDOMProps, mergeProps as $1Hnir$mergeProps, useSlotId as $1Hnir$useSlotId} from \"@react-aria/utils\";\nimport {useLocalizedStringFormatter as $1Hnir$useLocalizedStringFormatter} from \"@react-aria/i18n\";\nimport {useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible} from \"@react-aria/interactions\";\nimport {useOverlayTrigger as $1Hnir$useOverlayTrigger} from \"@react-aria/overlays\";\nimport {useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem} from \"@react-aria/selection\";\nimport {getItemCount as $1Hnir$getItemCount} from \"@react-stately/collections\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = {\n    \"longPressMessage\": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`\n};\n\n\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = {\n    \"longPressMessage\": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`\n};\n\n\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = {\n    \"longPressMessage\": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`\n};\n\n\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = {\n    \"longPressMessage\": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`\n};\n\n\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = {\n    \"longPressMessage\": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`\n};\n\n\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = {\n    \"longPressMessage\": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`\n};\n\n\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = {\n    \"longPressMessage\": `Long press or press Alt + ArrowDown to open menu`\n};\n\n\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = {\n    \"longPressMessage\": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`\n};\n\n\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = {\n    \"longPressMessage\": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`\n};\n\n\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = {\n    \"longPressMessage\": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`\n};\n\n\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = {\n    \"longPressMessage\": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`\n};\n\n\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = {\n    \"longPressMessage\": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`\n};\n\n\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = {\n    \"longPressMessage\": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`\n};\n\n\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = {\n    \"longPressMessage\": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`\n};\n\n\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = {\n    \"longPressMessage\": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`\n};\n\n\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = {\n    \"longPressMessage\": `長押しまたは Alt+下矢印キーでメニューを開く`\n};\n\n\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = {\n    \"longPressMessage\": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`\n};\n\n\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = {\n    \"longPressMessage\": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`\n};\n\n\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = {\n    \"longPressMessage\": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`\n};\n\n\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = {\n    \"longPressMessage\": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`\n};\n\n\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = {\n    \"longPressMessage\": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`\n};\n\n\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = {\n    \"longPressMessage\": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`\n};\n\n\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = {\n    \"longPressMessage\": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`\n};\n\n\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = {\n    \"longPressMessage\": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`\n};\n\n\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = {\n    \"longPressMessage\": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`\n};\n\n\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = {\n    \"longPressMessage\": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`\n};\n\n\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = {\n    \"longPressMessage\": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`\n};\n\n\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = {\n    \"longPressMessage\": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`\n};\n\n\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = {\n    \"longPressMessage\": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`\n};\n\n\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = {\n    \"longPressMessage\": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`\n};\n\n\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = {\n    \"longPressMessage\": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`\n};\n\n\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = {\n    \"longPressMessage\": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`\n};\n\n\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = {\n    \"longPressMessage\": `长按或按 Alt + 向下方向键以打开菜单`\n};\n\n\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = {\n    \"longPressMessage\": `長按或按 Alt+向下鍵以開啟功能表`\n};\n\n\n$9bdd31893c9700c3$exports = {\n    \"ar-AE\": $c0398ad35c3639b7$exports,\n    \"bg-BG\": $7af657c4165927c3$exports,\n    \"cs-CZ\": $d95d4da6d531ab81$exports,\n    \"da-DK\": $24ebda9c775dca17$exports,\n    \"de-DE\": $743e0dfca6cab1e9$exports,\n    \"el-GR\": $a2f41026e05f1c84$exports,\n    \"en-US\": $43b800e97c901737$exports,\n    \"es-ES\": $442f5f6ac211e29f$exports,\n    \"et-EE\": $dff280acfeb2d8ac$exports,\n    \"fi-FI\": $51608325613944d7$exports,\n    \"fr-FR\": $c4a1b1eabeaa87be$exports,\n    \"he-IL\": $8c74815cdee18d1b$exports,\n    \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n    \"hu-HU\": $a89a74a39eba465a$exports,\n    \"it-IT\": $edc7c66594a0ae8a$exports,\n    \"ja-JP\": $f1ab51510712db52$exports,\n    \"ko-KR\": $f9b672d9b82fa3d6$exports,\n    \"lt-LT\": $a385f3910feda499$exports,\n    \"lv-LV\": $4f1bde932c441789$exports,\n    \"nb-NO\": $914a51a8a594d5be$exports,\n    \"nl-NL\": $89aaf803103bb500$exports,\n    \"pl-PL\": $c685891476dbaaca$exports,\n    \"pt-BR\": $885879b9b10c2959$exports,\n    \"pt-PT\": $6b39616688a51692$exports,\n    \"ro-RO\": $f26362aed63f47e2$exports,\n    \"ru-RU\": $06cbade644558bf0$exports,\n    \"sk-SK\": $0a391ff68f9d59b1$exports,\n    \"sl-SI\": $8193cf0e649c7928$exports,\n    \"sr-SP\": $f398debcce5a5c55$exports,\n    \"sv-SE\": $9e9fef000aa4c013$exports,\n    \"tr-TR\": $c016c8183bbe3d68$exports,\n    \"uk-UA\": $ca4f6c8462244e62$exports,\n    \"zh-CN\": $2d9960c02ccac927$exports,\n    \"zh-TW\": $f1b682a4c8c5631c$exports\n};\n\n\n\n\n\n\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n    let { type: type = 'menu' , isDisabled: isDisabled , trigger: trigger = 'press'  } = props;\n    let menuTriggerId = $1Hnir$useId();\n    let { triggerProps: triggerProps , overlayProps: overlayProps  } = $1Hnir$useOverlayTrigger({\n        type: type\n    }, state, ref);\n    let onKeyDown = (e)=>{\n        if (isDisabled) return;\n        if (trigger === 'longPress' && !e.altKey) return;\n        if (ref && ref.current) switch(e.key){\n            case 'Enter':\n            case ' ':\n                if (trigger === 'longPress') return;\n            // fallthrough\n            case 'ArrowDown':\n                // Stop propagation, unless it would already be handled by useKeyboard.\n                if (!('continuePropagation' in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle('first');\n                break;\n            case 'ArrowUp':\n                if (!('continuePropagation' in e)) e.stopPropagation();\n                e.preventDefault();\n                state.toggle('last');\n                break;\n        }\n    };\n    let stringFormatter = $1Hnir$useLocalizedStringFormatter((/*@__PURE__*/$parcel$interopDefault($9bdd31893c9700c3$exports)));\n    let { longPressProps: longPressProps  } = $1Hnir$useLongPress({\n        isDisabled: isDisabled || trigger !== 'longPress',\n        accessibilityDescription: stringFormatter.format('longPressMessage'),\n        onLongPressStart () {\n            state.close();\n        },\n        onLongPress () {\n            state.open('first');\n        }\n    });\n    let pressProps = {\n        onPressStart (e) {\n            // For consistency with native, open the menu on mouse/key down, but touch up.\n            if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) // If opened with a screen reader, auto focus the first item.\n            // Otherwise, the menu itself will be focused.\n            state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n        },\n        onPress (e) {\n            if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n        }\n    };\n    // omit onPress from triggerProps since we override it above.\n    delete triggerProps.onPress;\n    return {\n        menuTriggerProps: {\n            ...triggerProps,\n            ...trigger === 'press' ? pressProps : longPressProps,\n            id: menuTriggerId,\n            onKeyDown: onKeyDown\n        },\n        menuProps: {\n            ...overlayProps,\n            'aria-labelledby': menuTriggerId,\n            autoFocus: state.focusStrategy,\n            onClose: state.close\n        }\n    };\n}\n\n\n\n\nconst $d5336fe17ce95402$export$6f49b4016bfc8d56 = new WeakMap();\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n    let { shouldFocusWrap: shouldFocusWrap = true , ...otherProps } = props;\n    if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n    let domProps = $1Hnir$filterDOMProps(props, {\n        labelable: true\n    });\n    let { listProps: listProps  } = $1Hnir$useSelectableList({\n        ...otherProps,\n        ref: ref,\n        selectionManager: state.selectionManager,\n        collection: state.collection,\n        disabledKeys: state.disabledKeys,\n        shouldFocusWrap: shouldFocusWrap\n    });\n    $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {\n        onClose: props.onClose,\n        onAction: props.onAction\n    });\n    return {\n        menuProps: $1Hnir$mergeProps(domProps, {\n            role: 'menu',\n            ...listProps\n        })\n    };\n}\n\n\n\n\n\n\n\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n    let { key: key , closeOnSelect: closeOnSelect , isVirtualized: isVirtualized  } = props;\n    var _isDisabled;\n    let isDisabled = (_isDisabled = props.isDisabled) !== null && _isDisabled !== void 0 ? _isDisabled : state.disabledKeys.has(key);\n    var _isSelected;\n    let isSelected = (_isSelected = props.isSelected) !== null && _isSelected !== void 0 ? _isSelected : state.selectionManager.isSelected(key);\n    let isFocused = state.selectionManager.focusedKey === key;\n    let data = $d5336fe17ce95402$export$6f49b4016bfc8d56.get(state);\n    let onClose = props.onClose || data.onClose;\n    let onAction = props.onAction || data.onAction;\n    let role = 'menuitem';\n    if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';\n    else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n    let labelId = $1Hnir$useSlotId();\n    let descriptionId = $1Hnir$useSlotId();\n    let keyboardId = $1Hnir$useSlotId();\n    let ariaProps = {\n        'aria-disabled': isDisabled,\n        role: role,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': labelId,\n        'aria-describedby': [\n            descriptionId,\n            keyboardId\n        ].filter(Boolean).join(' ') || undefined\n    };\n    if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n    if (isVirtualized) {\n        ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n        ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n    }\n    let onKeyDown = (e)=>{\n        // Ignore repeating events, which may have started on the menu trigger before moving\n        // focus to the menu item. We want to wait for a second complete key press sequence.\n        if (e.repeat) return;\n        switch(e.key){\n            case ' ':\n                if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n                break;\n            case 'Enter':\n                // The Enter key should always close on select, except if overridden.\n                if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n                break;\n        }\n    };\n    let onPressStart = (e)=>{\n        if (e.pointerType === 'keyboard' && onAction) onAction(key);\n    };\n    let onPressUp = (e)=>{\n        if (e.pointerType !== 'keyboard') {\n            if (onAction) onAction(key);\n            // Pressing a menu item should close by default in single selection mode but not multiple\n            // selection mode, except if overridden by the closeOnSelect prop.\n            if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n        }\n    };\n    let { itemProps: itemProps  } = $1Hnir$useSelectableItem({\n        selectionManager: state.selectionManager,\n        key: key,\n        ref: ref,\n        shouldSelectOnPressUp: true,\n        allowsDifferentPressOrigin: true\n    });\n    let { pressProps: pressProps , isPressed: isPressed  } = $1Hnir$usePress({\n        onPressStart: onPressStart,\n        onPressUp: onPressUp,\n        isDisabled: isDisabled\n    });\n    let { hoverProps: hoverProps  } = $1Hnir$useHover({\n        isDisabled: isDisabled,\n        onHoverStart () {\n            if (!$1Hnir$isFocusVisible()) {\n                state.selectionManager.setFocused(true);\n                state.selectionManager.setFocusedKey(key);\n            }\n        }\n    });\n    return {\n        menuItemProps: {\n            ...ariaProps,\n            ...$1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n                onKeyDown: onKeyDown\n            })\n        },\n        labelProps: {\n            id: labelId\n        },\n        descriptionProps: {\n            id: descriptionId\n        },\n        keyboardShortcutProps: {\n            id: keyboardId\n        },\n        isFocused: isFocused,\n        isSelected: isSelected,\n        isPressed: isPressed,\n        isDisabled: isDisabled\n    };\n}\n\n\n\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n    let { heading: heading , 'aria-label': ariaLabel  } = props;\n    let headingId = $1Hnir$useId();\n    return {\n        itemProps: {\n            role: 'presentation'\n        },\n        headingProps: heading ? {\n            // Techincally, menus cannot contain headings according to ARIA.\n            // We hide the heading from assistive technology, and only use it\n            // as a label for the nested group.\n            id: headingId,\n            'aria-hidden': true\n        } : {\n        },\n        groupProps: {\n            role: 'group',\n            'aria-label': ariaLabel,\n            'aria-labelledby': heading ? headingId : undefined\n        }\n    };\n}\n\n\n\n\nexport {$168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nimport { DismissButton, useOverlay } from '@react-aria/overlays';\nimport { FocusScope } from '@react-aria/focus';\nimport { mergeProps } from '@react-aria/utils';\nimport { PopperProps, usePopper } from 'react-popper';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { ListItemPreliminaryItem } from 'list/ListItemFactory';\nimport { CollectionChildren } from '@react-types/shared';\n\nexport type PopoverProps = {\n  children: CollectionChildren<ListItemPreliminaryItem>;\n  isOpen: boolean;\n  onClose: () => void;\n  placement?: PopperProps<{}>['placement'];\n  triggerRef?: React.RefObject<HTMLElement>;\n};\n\nexport const Popover = React.forwardRef(\n  (\n    { children, isOpen, onClose, placement, triggerRef }: PopoverProps,\n    forwardedRef: React.Ref<HTMLDivElement | null>\n  ) => {\n    const ref = React.useRef<HTMLDivElement>(null);\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const { overlayProps } = useOverlay(\n      {\n        onClose,\n        isOpen,\n        isDismissable: true,\n      },\n      ref\n    );\n\n    const { styles: popperStyle, attributes: popperProps } = usePopper(\n      triggerRef?.current,\n      ref.current,\n      {\n        placement,\n        strategy: 'fixed',\n      }\n    );\n\n    return (\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            key={'Popover'}\n            initial={{\n              opacity: 0,\n            }}\n            animate={{\n              opacity: 1,\n            }}\n            exit={{ opacity: 0 }}\n            {...(mergeProps(overlayProps, popperProps.popper ?? {}) as any)}\n            style={{ ...popperStyle.popper, zIndex: 10 }}\n            ref={ref}\n          >\n            <FocusScope restoreFocus>\n              <DismissButton onDismiss={onClose} />\n              {children}\n              <DismissButton onDismiss={onClose} />\n            </FocusScope>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    );\n  }\n);\nPopover.displayName = 'Popover';\n","import {useMemo as $1OoTj$useMemo, useEffect as $1OoTj$useEffect} from \"react\";\nimport {useMultipleSelectionState as $1OoTj$useMultipleSelectionState, SelectionManager as $1OoTj$SelectionManager} from \"@react-stately/selection\";\nimport {useCollection as $1OoTj$useCollection} from \"@react-stately/collections\";\nimport {useControlledState as $1OoTj$useControlledState} from \"@react-stately/utils\";\n\n\n\nvar tmp = Symbol.iterator;\nclass $05ca4cd7c4a5a999$export$863faf230ee2118a {\n    *[tmp]() {\n        yield* this.iterable;\n    }\n    get size() {\n        return this.keyMap.size;\n    }\n    getKeys() {\n        return this.keyMap.keys();\n    }\n    getKeyBefore(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.prevKey : null;\n    }\n    getKeyAfter(key) {\n        let node = this.keyMap.get(key);\n        return node ? node.nextKey : null;\n    }\n    getFirstKey() {\n        return this.firstKey;\n    }\n    getLastKey() {\n        return this.lastKey;\n    }\n    getItem(key) {\n        return this.keyMap.get(key);\n    }\n    at(idx) {\n        const keys = [\n            ...this.getKeys()\n        ];\n        return this.getItem(keys[idx]);\n    }\n    constructor(nodes, { expandedKeys: expandedKeys  } = {\n    }){\n        this.keyMap = new Map();\n        this.iterable = nodes;\n        expandedKeys = expandedKeys || new Set();\n        let visit = (node)=>{\n            this.keyMap.set(node.key, node);\n            if (node.childNodes && (node.type === 'section' || expandedKeys.has(node.key))) for (let child of node.childNodes)visit(child);\n        };\n        for (let node2 of nodes)visit(node2);\n        let last;\n        let index = 0;\n        for (let [key, node1] of this.keyMap){\n            if (last) {\n                last.nextKey = key;\n                node1.prevKey = last.key;\n            } else {\n                this.firstKey = key;\n                node1.prevKey = undefined;\n            }\n            if (node1.type === 'item') node1.index = index++;\n            last = node1;\n            // Set nextKey as undefined since this might be the last node\n            // If it isn't the last node, last.nextKey will properly set at start of new loop\n            last.nextKey = undefined;\n        }\n        this.lastKey = last === null || last === void 0 ? void 0 : last.key;\n    }\n}\n\n\n\n\nfunction $875d6693e12af071$export$728d6ba534403756(props) {\n    let [expandedKeys, setExpandedKeys] = $1OoTj$useControlledState(props.expandedKeys ? new Set(props.expandedKeys) : undefined, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(), props.onExpandedChange);\n    let selectionState = $1OoTj$useMultipleSelectionState(props);\n    let disabledKeys = $1OoTj$useMemo(()=>props.disabledKeys ? new Set(props.disabledKeys) : new Set()\n    , [\n        props.disabledKeys\n    ]);\n    let tree = $1OoTj$useCollection(props, (nodes)=>new $05ca4cd7c4a5a999$export$863faf230ee2118a(nodes, {\n            expandedKeys: expandedKeys\n        })\n    , null, [\n        expandedKeys\n    ]);\n    // Reset focused key if that item is deleted from the collection.\n    $1OoTj$useEffect(()=>{\n        if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey)) selectionState.setFocusedKey(null);\n    }, [\n        tree,\n        selectionState.focusedKey\n    ]);\n    let onToggle = (key)=>{\n        setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));\n    };\n    return {\n        collection: tree,\n        expandedKeys: expandedKeys,\n        disabledKeys: disabledKeys,\n        toggleKey: onToggle,\n        selectionManager: new $1OoTj$SelectionManager(tree, selectionState)\n    };\n}\nfunction $875d6693e12af071$var$toggleKey(set, key) {\n    let res = new Set(set);\n    if (res.has(key)) res.delete(key);\n    else res.add(key);\n    return res;\n}\n\n\n\n\nexport {$875d6693e12af071$export$728d6ba534403756 as useTreeState};\n//# sourceMappingURL=module.js.map\n","import * as React from 'react';\nimport { useFocus } from '@react-aria/interactions';\nimport { Item as AriaItem } from '@react-stately/collections';\nimport { useMenuItem } from '@react-aria/menu';\nimport { Node } from '@react-types/shared';\nimport { mergeProps } from '@react-aria/utils';\nimport { TreeState } from '@react-stately/tree';\nimport { ListItem } from '../list';\n\nimport styles from './Menu.module.scss';\n\nexport const Item = AriaItem;\n\nexport interface MenuItemProps {\n  item: Node<object>;\n  state: TreeState<object>;\n  isDisabled?: boolean;\n  isDivider?: boolean;\n  onAction?: (_key: React.Key) => void;\n  onClose?: () => void;\n}\n\nexport const MenuItem = React.forwardRef(\n  (\n    {\n      item,\n      state,\n      isDisabled = false,\n      isDivider = false,\n      onAction,\n      onClose,\n    }: MenuItemProps,\n    forwardedRef: React.Ref<HTMLLIElement | null>\n  ) => {\n    // Get props for the menu item element\n    const ref = React.useRef<HTMLLIElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const { menuItemProps } = useMenuItem(\n      {\n        key: item.key,\n        isDisabled: isDisabled || isDivider,\n        onAction,\n        onClose,\n      },\n      state,\n      ref\n    );\n\n    // Handle focus events so we can apply highlighted\n    // style to the focused menu item\n    const [isFocused, setFocused] = React.useState(false);\n    const { focusProps } = useFocus({\n      onFocusChange: setFocused,\n      isDisabled: isDisabled || isDivider,\n    });\n\n    const leftSection = Array.isArray(item.rendered) ? item.rendered[0] : null;\n    const content = Array.isArray(item.rendered)\n      ? item.rendered[1]\n      : item.rendered;\n\n    return (\n      <ListItem\n        {...mergeProps(menuItemProps, focusProps)}\n        ref={ref}\n        isSelected={isFocused}\n        leftSection={<div className={styles.leftSection}>{leftSection}</div>}\n      >\n        {content}\n      </ListItem>\n    );\n  }\n);\nMenuItem.displayName = 'MenuItem';\n","import * as React from 'react';\nimport { useTreeState } from '@react-stately/tree';\nimport { CollectionChildren } from '@react-types/shared';\nimport { useMenu } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { MenuItem } from './MenuItem';\nimport { List, ListProps } from '../list';\nimport clsx from 'clsx';\n\nimport styles from './Menu.module.scss';\n\nexport type WithDescription =\n  | {\n      /**\n       * Provide a short title describing the menu.\n       * This is a shothand for the `aria-label` attribute.\n       */\n      title: string;\n    }\n  | { 'aria-label': string }\n  | { 'aria-labelledby': string };\n\nexport type MenuProps = ListProps &\n  WithDescription & {\n    children: CollectionChildren<object>;\n    onClose?: () => void;\n    onAction?: (_key: React.Key) => void;\n  };\n\nexport const Menu = React.forwardRef(\n  (\n    { className, title, onAction, onClose, ...props }: MenuProps,\n    forwardedRef: React.Ref<HTMLUListElement | null>\n  ) => {\n    const ref = React.useRef<HTMLUListElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const state = useTreeState({\n      children: props.children,\n      selectionMode: 'none',\n    });\n\n    const { menuProps } = useMenu(\n      {\n        'aria-label': title,\n        ...props,\n      },\n      state,\n      ref\n    );\n\n    return (\n      <List\n        className={clsx(styles.root, className)}\n        {...mergeProps(menuProps, props)}\n        ref={ref}\n      >\n        {[...state.collection].map((item) => (\n          <MenuItem\n            key={item.key}\n            item={item as any}\n            state={state}\n            onAction={onAction}\n            onClose={onClose}\n          />\n        ))}\n        {props.children}\n      </List>\n    );\n  }\n);\nMenu.displayName = 'Menu';\n","import * as React from 'react';\nimport { useMenuTriggerState } from '@react-stately/menu';\nimport { CollectionChildren } from '@react-types/shared';\nimport { Button, ButtonProps } from '../button/Button';\nimport { useButton } from '@react-aria/button';\nimport { useMenuTrigger } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { Popover, PopoverProps } from '../popover/new/Popover';\nimport { Menu, WithDescription } from './Menu';\nimport clsx from 'clsx';\n\nimport styles from './MenuButton.module.scss';\n\nexport type MenuButtonProps = {\n  buttonProps: Omit<ButtonProps, 'ref'>;\n  className?: string;\n  style?: React.CSSProperties;\n  children: CollectionChildren<object>;\n  placement?: PopoverProps['placement'];\n  onOpenChange?: (_isOpen: boolean) => void;\n  onAction?: (_action: React.Key) => void;\n} & WithDescription;\n\nexport const MenuButton = React.forwardRef(\n  (\n    {\n      buttonProps,\n      className,\n      onOpenChange,\n      placement,\n      style,\n      ...props\n    }: MenuButtonProps,\n    forwardedRef: React.Ref<HTMLButtonElement | null>\n  ) => {\n    const isBrowser = typeof window !== 'undefined';\n\n    const ref = React.useRef<HTMLButtonElement>(null);\n\n    React.useImperativeHandle(forwardedRef, () => ref.current);\n\n    const state = useMenuTriggerState({\n      closeOnSelect: true,\n      onOpenChange,\n    });\n    const { menuTriggerProps, menuProps } = useMenuTrigger(\n      { type: 'menu', isDisabled: buttonProps.disabled },\n      state,\n      ref\n    );\n    const element = React.useRef<HTMLDivElement | null>(null);\n    const { buttonProps: ariaButtonProps } = useButton(menuTriggerProps, ref);\n\n    React.useEffect(() => () => element.current?.remove(), []);\n\n    if (isBrowser && element.current === null) {\n      element.current = document.createElement('div');\n      const dialogContainer =\n        document.getElementById('dialogContainer') ||\n        (() => {\n          const container = document.createElement('div');\n          container.id = 'dialogContainer';\n          document.body.appendChild(container);\n          return container;\n        })();\n      dialogContainer.appendChild(element.current);\n    }\n\n    return (\n      <div className={clsx(styles.root, className)} style={style}>\n        <Button ref={ref} {...buttonProps} {...ariaButtonProps} />\n        <Popover\n          isOpen={state.isOpen}\n          onClose={state.close}\n          placement={placement}\n          triggerRef={ref}\n        >\n          <Menu\n            {...mergeProps(\n              { ...menuProps, autoFocus: !!menuProps.autoFocus },\n              props\n            )}\n            onClose={state.close}\n          >\n            {props.children}\n          </Menu>\n        </Popover>\n      </div>\n    );\n  }\n);\nMenuButton.displayName = 'MenuButton';\n"],"names":["$e40ea825a81a3709$export$52baac22726c72bf","keys","anchorKey","currentKey","$7af3f5b51489e0b5$var$equalSets","setA","setB","item","$7af3f5b51489e0b5$export$253fe78d46329472","props","selectionMode","disallowEmptySelection","allowDuplicateSelectionEvents","selectionBehaviorProp","disabledBehavior","isFocusedRef","$Qsto2$useRef","setFocused","$Qsto2$useState","focusedKeyRef","childFocusStrategyRef","setFocusedKey","selectedKeysProp","$Qsto2$useMemo","$7af3f5b51489e0b5$var$convertSelection","defaultSelectedKeys","selectedKeys","setSelectedKeys","$Qsto2$useControlledState","disabledKeysProp","selectionBehavior","setSelectionBehavior","lastSelectionBehavior","$Qsto2$useEffect","f","k","childFocusStrategy","selection","defaultValue","$d496c0a20b6e58ec$export$6c8a5aaad13c9852","isFocused","key","allKeys","first","last","toKey","key1","from","to","fromItem","toItem","addKeys","e","key2","collection","state","options","ref","$c1d7fb2ec91bae71$var$Item","context","childItems","title","children","rendered","textValue","$c1d7fb2ec91bae71$var$hasChildItems","child1","items","$tyW6A$react","child","$c1d7fb2ec91bae71$export$6d08773d2e66f8f2","$eb2240fc39a57fa5$export$bf788dd355e3a401","$eb2240fc39a57fa5$var$iterable","index","nodes","node","partialNode","parentKey","v","_key","parentNode","element","cached","type","name","childNodes","result","childNode","nodeKey","$eb2240fc39a57fa5$var$compose","$eb2240fc39a57fa5$var$capitalize","builder","node1","iterator","cache","iterable","item1","outer","inner","str","$7613b1592d41b092$export$6cd28814d92fa9c9","factory","invalidators","$tyW6A$useMemo","prev","$tyW6A$useRef","$453cc9f0df89c0a5$var$cache","$453cc9f0df89c0a5$export$77d5aafae4e095b2","count","$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","overlayTriggerState","$9Xvoh$useOverlayTriggerState","focusStrategy1","setFocusStrategy","$9Xvoh$useState","focusStrategy","$feb5ffebff200149$export$d3e3bd3e26688c04","$eCAIO$isAppleDevice","$feb5ffebff200149$export$16792effe837dba3","$eCAIO$isMac","$fb3050f43d946246$export$e32c88dfddc6e1d8","keyboardDelegate","selectionManager","onTypeSelect","$eCAIO$useRef","onKeyDown","character","$fb3050f43d946246$var$getStringForKey","$ae20dd8cbca75726$export$d6daf82dcd84e87c","manager","delegate","autoFocus","shouldFocusWrap","disallowSelectAll","selectOnFocus","disallowTypeAhead","shouldUseVirtualFocus","allowsTabNavigation","isVirtualized","scrollRef","direction","$eCAIO$useLocale","navigateToKey","childFocus","ref4","ref1","nextKey","ref2","ref3","firstKey","lastKey","walker","$eCAIO$getFocusableTreeWalker","next","$eCAIO$focusWithoutScrolling","scrollPos","$eCAIO$useEvent","onFocus","navigateToFirstKey","relatedTarget","_lastSelectedKey","_firstSelectedKey","$eCAIO$scrollIntoView","onBlur","autoFocusRef","$eCAIO$useEffect","focusedKey","$eCAIO$focusSafely","handlers","typeSelectProps","$eCAIO$mergeProps","tabIndex","$880e95eb8b93ba9a$export$ecf600387e221c37","shouldSelectOnPressUp","focus","isDisabled","onAction","allowsDifferentPressOrigin","onSelect","itemProps","allowsSelection","allowsActions","hasPrimaryAction","hasSecondaryAction","hasAction","modality","longPressEnabled","longPressEnabledOnPressStart","hadPrimaryActionOnPressStart","itemPressProps","$880e95eb8b93ba9a$var$isSelectionKey","$880e95eb8b93ba9a$var$isActionKey","pressProps","isPressed","$eCAIO$usePress","onDoubleClick","longPressProps","$eCAIO$useLongPress","event","$2a25aae57d74318e$export$a05409b8bb224a5a","menu","pageY","search","fromKey","substring","disabledKeys","collator","$982254629710d113$export$b95089534ab7c1fd","$eCAIO$useCollator","$eCAIO$useMemo","collectionProps","$parcel$interopDefault","a","$9bdd31893c9700c3$exports","$c0398ad35c3639b7$exports","$7af657c4165927c3$exports","$d95d4da6d531ab81$exports","$24ebda9c775dca17$exports","$743e0dfca6cab1e9$exports","$a2f41026e05f1c84$exports","$43b800e97c901737$exports","$442f5f6ac211e29f$exports","$dff280acfeb2d8ac$exports","$51608325613944d7$exports","$c4a1b1eabeaa87be$exports","$8c74815cdee18d1b$exports","$fd0e9ef6a7fe0ec9$exports","$a89a74a39eba465a$exports","$edc7c66594a0ae8a$exports","$f1ab51510712db52$exports","$f9b672d9b82fa3d6$exports","$a385f3910feda499$exports","$4f1bde932c441789$exports","$914a51a8a594d5be$exports","$89aaf803103bb500$exports","$c685891476dbaaca$exports","$885879b9b10c2959$exports","$6b39616688a51692$exports","$f26362aed63f47e2$exports","$06cbade644558bf0$exports","$0a391ff68f9d59b1$exports","$8193cf0e649c7928$exports","$f398debcce5a5c55$exports","$9e9fef000aa4c013$exports","$c016c8183bbe3d68$exports","$ca4f6c8462244e62$exports","$2d9960c02ccac927$exports","$f1b682a4c8c5631c$exports","$168583247155ddda$export$dc9c12ed27dd1b49","trigger","menuTriggerId","$1Hnir$useId","triggerProps","overlayProps","$1Hnir$useOverlayTrigger","stringFormatter","$1Hnir$useLocalizedStringFormatter","$1Hnir$useLongPress","$d5336fe17ce95402$export$6f49b4016bfc8d56","$d5336fe17ce95402$export$38eaa17faae8f579","otherProps","domProps","$1Hnir$filterDOMProps","listProps","$1Hnir$useSelectableList","$1Hnir$mergeProps","$a2e5df62f93c7633$export$9d32628fc2aea7da","closeOnSelect","_isDisabled","_isSelected","isSelected","data","onClose","role","labelId","$1Hnir$useSlotId","descriptionId","keyboardId","ariaProps","$1Hnir$getItemCount","onPressStart","onPressUp","$1Hnir$useSelectableItem","$1Hnir$usePress","hoverProps","$1Hnir$useHover","$1Hnir$isFocusVisible","Popover","React.forwardRef","isOpen","placement","forwardedRef","React.useRef","React","popperStyle","popperProps","_jsx","AnimatePresence","motion","mergeProps","_a","popper","_jsxs","FocusScope","DismissButton","tmp","$05ca4cd7c4a5a999$export$863faf230ee2118a","idx","expandedKeys","visit","node2","$875d6693e12af071$export$728d6ba534403756","setExpandedKeys","$1OoTj$useControlledState","selectionState","$1OoTj$useMultipleSelectionState","$1OoTj$useMemo","tree","$1OoTj$useCollection","$1OoTj$useEffect","$875d6693e12af071$var$toggleKey","$1OoTj$SelectionManager","set","res","Item","AriaItem","MenuItem","isDivider","menuItemProps","React.useState","focusProps","leftSection","content","ListItem","styles","Menu","className","useTreeState","menuProps","List","clsx","MenuButton","buttonProps","onOpenChange","style","isBrowser","useMenuTriggerState","menuTriggerProps","disabled","ariaButtonProps","container","document","dialogContainer","Button","close"],"mappings":"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"}