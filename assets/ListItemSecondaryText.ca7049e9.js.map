{"version":3,"file":"ListItemSecondaryText.ca7049e9.js","sources":["../../src/list/List.tsx","../../src/list/ListItem.tsx","../../src/list/ListItemSecondaryText.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './List.module.scss';\n\nexport type ListProps = Omit<React.HTMLProps<HTMLUListElement>, 'ref'>;\n\nexport const List = React.forwardRef(\n  (\n    { children, className, ...props }: ListProps,\n    ref: React.Ref<HTMLUListElement>\n  ) => {\n    return (\n      <ul className={clsx(styles.root, className)} {...props} ref={ref}>\n        {children}\n      </ul>\n    );\n  }\n);\nList.displayName = 'List';\n","import * as React from 'react';\nimport { Divider } from '../divider/Divider';\nimport clsx from 'clsx';\n\nimport styles from './List.module.scss';\n\nexport type ListItemProps = React.HTMLProps<HTMLLIElement> & {\n  leftSection?: React.ReactNode;\n  rightSection?: React.ReactNode;\n  isDivider?: boolean;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isSelected?: boolean;\n};\n\nexport const ListItem = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      isDisabled,\n      isFocused,\n      isSelected,\n      leftSection,\n      rightSection,\n      ...props\n    }: ListItemProps,\n    ref: React.ForwardedRef<HTMLLIElement>\n  ) => {\n    if (props.isDivider === true) {\n      return (\n        <li\n          className={clsx(styles.li, styles.isDivider, className)}\n          {...Object.fromEntries(\n            Object.entries(props).filter(([key]) => key !== 'isDivider')\n          )}\n        >\n          <Divider />\n        </li>\n      );\n    }\n\n    return (\n      <li\n        className={clsx(styles.li, className, {\n          [styles.isDisabled]: isDisabled,\n          [styles.isFocused]: isFocused,\n          [styles.isSelected]: isSelected,\n        })}\n        {...(isFocused ? { ['data-is-focused']: true } : {})}\n        ref={ref}\n        {...props}\n      >\n        {leftSection && <div>{leftSection}</div>}\n        <div className={styles.mainSection}>{children}</div>\n        {rightSection && <div>{rightSection}</div>}\n      </li>\n    );\n  }\n);\nListItem.displayName = 'ListItem';\n","import * as React from 'react';\n\nimport styles from './List.module.scss';\n\nexport type ListItemSecondaryTextProps = React.HTMLProps<HTMLSpanElement>;\n\nexport const ListItemSecondaryText: React.FC<ListItemSecondaryTextProps> = ({\n  children,\n}) => <span className={styles.listItemSecondaryText}>{children}</span>;\nListItemSecondaryText.displayName = 'ListItemSecondaryText';\n"],"names":["React.forwardRef","children","className","props","_jsx","List","isDisabled","isFocused","isSelected","leftSection","rightSection","_jsxs","mainSection","ListItem","listItemSecondaryText","ListItemSecondaryText"],"mappings":"oeAOO,KAAA,GAAAA,EAAA,QAAA,WAAA,CAAA,CAEH,WAAEC,eAAUC,GAAcC,IAG1BC,EAAA,KAAA,CACE,UAAA,EAAA,EAAA,KAAA,CAAA,EAAmB,GAAA,EAA8BD,MAAO,UAAxD,CAAA,CAIH,EAEHE,EAAAA,YAAAA,0QCJO,KAAA,GAAAL,EAAA,QAAA,WAAA,CAAA,CAEH,WACEC,YACAC,aACAI,YACAC,aACAC,cACAC,kBACAC,GACGP,IAIL,EAAA,YAAA,GACEC,EAAA,KAAA,CACE,UAAA,EAAA,EAAA,GAAA,EAAA,UAAA,CAAA,EACiB,GAAA,OAAA,YAAA,OAAA,QAAA,CAAA,EAAA,OAAA,CAAA,CAAA,KAAA,IAAA,WAAA,CAAA,EACX,SAAAA,EAAA,EAAA,EAAA,CAIJ,CAAA,EAKNO,EAAA,KAAA,CACE,UAAA,EAAA,EAAA,GAAA,EAAA,CACwC,CAAA,EAAA,YAAA,EACfL,CAAAA,EAAAA,WAAAA,EACDC,CAAAA,EAAAA,YAAAA,CACCC,CAAAA,EAHR,GAAA,EAAA,CAKE,CAAA,mBAAA,EAAuB,EAAA,CAAA,EAN1C,MAOE,GAAA,EACIL,SAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAEY,SAAA,CAAMM,CAAAA,EAAAA,EAAAA,MAAAA,CACtB,UAAA,EAAA,YAAuBG,UAAvB,CAAA,EAAA,GAAAR,EAAA,MAAA,CACiB,SAAA,CAAMM,CAAAA,CAAAA,CAZzB,CAAA,CAeH,EAEHG,EAAAA,YAAAA,23BCtDO,KAAA,GAAA,CAAA,CAAqE,cAC1EZ,EAAAA,OAAAA,CACI,UAAA,EAAA,sBAAwBa,UAAxB,CAAA,EACNC,EAAAA,YAAAA"}