{"version":3,"file":"ListItemSecondaryText.45ca7435.js","sources":["../../src/list/List.tsx","../../src/list/ListItem.tsx","../../src/list/ListItemSecondaryText.tsx"],"sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\n\nimport styles from './List.module.scss';\n\nexport type ListProps = Omit<React.HTMLProps<HTMLUListElement>, 'ref'>;\n\nexport const List = React.forwardRef(\n  (\n    { children, className, ...props }: ListProps,\n    ref: React.Ref<HTMLUListElement>\n  ) => {\n    return (\n      <ul className={clsx(styles.root, className)} {...props} ref={ref}>\n        {children}\n      </ul>\n    );\n  }\n);\nList.displayName = 'List';\n","import * as React from 'react';\nimport { Divider } from '../divider/Divider';\nimport clsx from 'clsx';\n\nimport styles from './List.module.scss';\n\nexport type ListItemProps = React.HTMLProps<HTMLLIElement> & {\n  leftSection?: React.ReactNode;\n  rightSection?: React.ReactNode;\n  isDivider?: boolean;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isSelected?: boolean;\n};\n\nexport const ListItem = React.forwardRef(\n  (\n    {\n      children,\n      className,\n      isDisabled,\n      isFocused,\n      isSelected,\n      leftSection,\n      rightSection,\n      ...props\n    }: ListItemProps,\n    ref: React.ForwardedRef<HTMLLIElement>\n  ) => {\n    if (props.isDivider === true) {\n      return (\n        <li\n          className={clsx(styles.li, styles.isDivider, className)}\n          {...Object.fromEntries(\n            Object.entries(props).filter(([key]) => key !== 'isDivider')\n          )}\n        >\n          <Divider />\n        </li>\n      );\n    }\n\n    return (\n      <li\n        className={clsx(styles.li, className, {\n          [styles.isDisabled]: isDisabled,\n          [styles.isFocused]: isFocused,\n          [styles.isSelected]: isSelected,\n        })}\n        {...(isFocused ? { ['data-is-focused']: true } : {})}\n        ref={ref}\n        {...props}\n      >\n        {leftSection && <div>{leftSection}</div>}\n        <div className={styles.mainSection}>{children}</div>\n        {rightSection && <div>{rightSection}</div>}\n      </li>\n    );\n  }\n);\nListItem.displayName = 'ListItem';\n","import * as React from 'react';\n\nimport styles from './List.module.scss';\n\nexport type ListItemSecondaryTextProps = React.HTMLProps<HTMLSpanElement>;\n\nexport const ListItemSecondaryText: React.FC<ListItemSecondaryTextProps> = ({\n  children,\n}) => <span className={styles.listItemSecondaryText}>{children}</span>;\nListItemSecondaryText.displayName = 'ListItemSecondaryText';\n"],"names":["List","React.forwardRef","children","className","ref","_jsx","clsx","styles","props","ListItem","isDisabled","isFocused","isSelected","leftSection","rightSection","key","Divider","_jsxs","mainSection","ListItemSecondaryText","listItemSecondaryText"],"mappings":"+bAOOA,EAAAC,EAAA,QAAA,WAAA,CAAA,CAEH,SAAAC,EAAEA,UAAAA,KAAUC,CAAZ,EAAAC,IAGAC,EAAA,KAAA,CACE,UAAAC,EAAAC,EAAA,KAAAJ,CAAA,EAAmB,GAAAK,EAA8BA,IAAAA,EAAO,SAAAN,CAAxD,CAAA,CAIH,EAEHF,EAAAA,YAAAA,iQCJO,MAAAS,EAAAR,EAAA,QAAA,WAAA,CAAA,CAEH,SAAAC,EACEA,UAAAA,EACAC,WAAAA,EACAO,UAAAA,EACAC,WAAAA,EACAC,YAAAA,EACAC,aAAAA,KACAC,CAPF,EAAAV,IAYAI,EAAA,YAAA,GACEH,EAAA,KAAA,CACE,UAAAC,EAAAC,EAAA,GAAAA,EAAA,UAAAJ,CAAA,EACiB,GAAA,OAAA,YAAA,OAAA,QAAAK,CAAA,EAAA,OAAA,CAAA,CAAAO,CAAA,IAAAA,IAAA,WAAA,CAAA,EACX,SAAAV,EAAAW,EAAA,EAAA,CAIJ,CAAA,EAKNC,EAAA,KAAA,CACE,UAAAX,EAAAC,EAAA,GAAAJ,EAAA,CACwC,CAAAI,EAAA,YAAAG,EACfA,CAAAA,EAAAA,WAAAA,EACDC,CAAAA,EAAAA,YAAAA,CACCC,CAAAA,EAHR,GAAAD,EAAA,CAKE,CAAA,mBAAA,EAAuB,EAAA,CAAA,EAN1C,IAAAP,EAOE,GAAAI,EACIA,SAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAEY,SAAAK,CAAMA,CAAAA,EAAAA,EAAAA,MAAAA,CACtB,UAAAN,EAAA,YAAuBW,SAAAA,CAAvB,CAAA,EAAAJ,GAAAT,EAAA,MAAA,CACiB,SAAAS,CAAMA,CAAAA,CAAAA,CAZzB,CAAA,CAeH,EAEHL,EAAAA,YAAAA,k3BCtDO,MAAAU,EAAA,CAAA,CAAqE,SAAAjB,CAAA,IAAAG,EAAA,OAAA,CAEtE,UAAAE,EAAA,sBAAwBa,SAAAA,CAAxB,CAAA,EACND,EAAAA,YAAAA"}